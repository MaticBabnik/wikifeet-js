/*
I needed this to find where the data comes from.
Turns out it's just a dumb script tag in the index file.
I wasted 2h of my life reverse engineering a fucking feet picture site!
FML.
*/
// wikiFeet main javascript

var messanger = new Object();
messanger['pexist'] = new Object();

// fuck this shit

messanger._gdata = messanger.gdata;

Object.defineProperty(messanger, 'gdata', {
    get: function () {
        return messanger._gdata;
    },

    set: function (value) {
        debugger; // sets breakpoint
        messanger._gdata = value;
    }
});

//end of injected code

var scrollTo = 0;
var scrollFrom = 0;
var scrollStartTime = null;
var timeToTarget = 1000; // SET THIS, IN ms
var timerId = 0;
var options = false;
var domain = location.hostname.substring(location.hostname.indexOf('wikifeet'));
var vhs = {};

eval(function(p,a,c,k,e,r){e=function(c){return c.toString(a)};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('1 4=2 6(\'h\',\'i\',\'k\',\'i\',\'f\',\'e\',\'e\',\'9\');1 5=2 6(\'.\',\'c\',\'o\',\'m\');1 7=2 b(\'[a-d]+.\'+4.0(\'\')+\'8?\'+5.0(\'\'));g(!3.j.l(7)){n.3=\'p://q.\'+4.0(\'\')+5.0(\'\')+r.3.s}',29,29,'join|var|new|location|wfurl|wfcom|Array|rgxp|x|t||RegExp||z|||if|w||hostname||match||parent||http|www|window|pathname'.split('|'),0,{}))
//window.onbeforeunload = function() { if(messanger['confirmexit'] != null) { return messanger['confirmexit']; } }
window.onbeforeunload = function() { messanger['confirmexit']; }

crdata = {
	101: { name: 'Arnaud Texier', url: 'https://www.pictame.com/user/arnaud__texier/803305007' },
	102: { name: 'Charles Hollander', url: 'https://www.flickr.com/photos/charleshollander/' },
	201: { name: '2018 Holly Randall', url: 'https://join.hollyrandall.com/track/MTI2LjE3LjEuMS4wLjAuMC4wLjA' },
	202: { name: 'ALS Scan, Inc.', url: 'https://www.alsscan.com/' },
	203: { name: 'EENT Inc.', url: 'http://www.karups.com/' },
	204: { name: 'TM / J STEPHEN HICKS', url: 'http://www.digitaldesire.com/' },
	205: { name: 'TM / SoftWood, Inc.', url: 'https://www.foxes.com/' },
	206: { name: '@lightningdesignzstudios' },
	207: { name: 'LoveHerFeet.com', url:'https://loveherfeet.com/' },
	208: { name: 'SheLovesBlack.com', url:'https://shelovesblack.com/' }
}




var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
var eventer = window[eventMethod];
var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";

// Listen to message from child window
eventer(messageEvent,function(e) {
    var key = e.message ? "message" : "data";
    var data = e[key];
    messanger.ifm = data;
    if (data.req == 'session')
    {
		var btn = document.createElement('button');
		btn.className = 'smallbtn';
		btn.innerHTML = 'AutoLogin (detected)';
		btn.onclick = function() { DomainLogin(messanger.ifm.passkey); }
		document.getElementById('autologin').appendChild(btn);
	}
},false);

function DomainLogin(passkey)
{
	var date = new Date();
	date.setTime(date.getTime()+(30*24*60*60*1000));
	document.cookie='passkey=' + passkey + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	window.location.reload(1);
}

function HashGallery(e)
{
	var temp = location.hash.match(/#&gid=1&pid=([0-9]+)/);
	if (temp)
	{
		for (var i in messanger.gdata)
		{
			if (messanger.gdata[i].pid == temp[1])
			{
				//if (messanger.gref) setTimeout(function() { messanger.gref.goTo(parseInt(i)) }, 100);
				//else 
				SlideShowNew(0, parseInt(i));
				break;
			}
		}		
	}
	else
	{
		if (messanger.gref) messanger.gref.close();
	}
}

document.addEventListener("DOMContentLoaded", function()
{ 
	if (!messanger.nohash) HashGallery();
	//if (0 && domain == 'wikifeet.com' && getCookie('bannerdismissed') != 'true')
	//{
	//	var date = new Date(); 
	//	date.setTime(date.getTime()+(4*60*60*1000));
	//	document.cookie='bannerdismissed=true; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	//	
	//	var div = document.createElement('div');
	//	div.id = 'banner';
	//	div.innerHTML = `<div><div onclick="document.body.removeChild(document.getElementById('banner'))">[X] Close ad</div></div><IFRAME src='https://mywikifeet.com/api.pl?banner=20'></IFRAME>`;
	//	document.body.appendChild(div);
	//}
});
window.onhashchange = HashGallery;


var ranknames = ['(click to rate)', '(ugly feet)', '(bad feet)', '(ok feet)', '(nice feet)', '(beautiful feet)'];
var repnames = {'A' : 'Adult Content', 'N' : 'No Feet Showing', 'P' : 'Poor Quality', 'F' : 'Fake / Wrong Person', 'D' : 'Duplicate', 'U' : 'Underage', 'I' : 'Illegal / Copyrighted'};


function ajax(com, params)
{
	if (window.XMLHttpRequest) { http_request = new XMLHttpRequest(); } 
	else if (window.ActiveXObject) { http_request = new ActiveXObject("Microsoft.XMLHTTP"); }
	http_request.onreadystatechange = alertContents;
	http_request.open('POST', '/perl/ajax.fpl', true);
	http_request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	http_request.send(params);

   function alertContents() 
   {
       if (http_request.readyState == 4) 
	   {
           if (http_request.status == 200) { eval(com + '(http_request.responseText)'); }
       }
   }
};


function ajaxpass(com, pass, params)
{
	if (window.XMLHttpRequest) { http_request = new XMLHttpRequest(); } 
	else if (window.ActiveXObject) { http_request = new ActiveXObject("Microsoft.XMLHTTP"); }
	http_request.onreadystatechange = alertContentsPass;
	http_request.open('POST', '/perl/ajax.fpl', true);
	http_request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	http_request.send(params);

	function alertContentsPass() 
	{
	    if (http_request.readyState == 4) 
		{
		if (http_request.status == 200) { eval(com + '(pass, http_request.responseText)'); }
	    }
	}	
}

function OnLoaded()
{
    if (document.getElementById('ol_command') == null) return;
    if (document.getElementById('ol_command').value == 'gloader')
    {
	    //if (getCookie('nophotos') == 'true')
	    //{
		    
		//}
		//else 
		pDisplayAll(document.getElementById('ol_value').value);
	}
}

function validateEmail(email) 
{ 
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
} 

function cmenu(cid, com, sign)
{
	if (com == 1)
	{
		sign.innerHTML = '&nbsp;>&nbsp;';
		sign.onclick = function() { cmenu(cid, 0, this); }
		document.getElementById('cmenu' + cid).style.display = 'block';
	}
	else
	{
		sign.innerHTML = '&nbsp;&lt;&nbsp;';
		sign.onclick = function() { cmenu(cid, 1, this); }
		document.getElementById('cmenu' + cid).style.display = 'none';
	}
}

function tagtimer()
{
	scrollTo = (document.documentElement && document.documentElement.scrollTop) ? document.documentElement.scrollTop : document.body.scrollTop;
	
	//galTop = document.getElementById('gallery').offsetTop - 40;
	galTop = document.getElementById('thepics').offsetTop - 40;
	moreTop = document.getElementById('morepics').offsetTop - galTop - 300;
	scrollTo -= galTop;	
	
	scrollStartTime = new Date();
	scrollFrom = document.getElementById('tmargin').offsetHeight;
	
	if (scrollTo < 0 ) scrollTo = 0;
	else if (scrollTo > moreTop) scrollTo = moreTop;		
	scrollTo += 30; // minimal value
	if (timerId == 0 ) timerId = setInterval( "tagfollow()", 33);
}

function tagfollow()
{
	var date = new Date();
	var diff = (scrollTo - scrollFrom) * Math.pow(((scrollStartTime - date) + timeToTarget)/timeToTarget,2);
	if ((date - scrollStartTime) < timeToTarget)
	{ 
		document.getElementById('tmargin').style.height = (scrollTo - diff) + 'px';
	}
	else 
	{ 
		clearInterval(timerId); timerId = 0; 
		document.getElementById('tmargin').style.height = scrollTo + 'px';
	}
}

function AccFav(cid)
{
	ajax('AccFav_XD', 'req=accnotify&cid=' + cid + '&type=0');	
}

function AccFav_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		var data = output.substring(1).split('|');
		var heart = document.getElementById('fav' + data[0]);
		if (heart != null) heart.src = '/images/tablefav' + data[1] + '.gif';
	};
}

function AccUnSub(cb)
{
	var mode = 0;
	if (cb.checked) mode = 1;
	ajax('AccUnSub_XD', 'req=accunsub&mode=' + mode);
	document.getElementById('acclists').innerHTML = 'Reloading...';
}

function AccUnSub_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		document.getElementById('acclists').innerHTML = '';
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('acclists').innerHTML = output.substring(1);
	};
}

function AccNotify(cid,type)
{
	ajax('AccNotify_XD', 'req=accnotify&cid=' + cid + '&type=' + type);	
}

function AccNotify_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		var data = output.substring(1).split('|');
		var cell = document.getElementById('notify' + data[0]);
		if (cell != null) cell.innerHTML = data[1];
	};
}

function BYGFunc(type, flag, rdiv)
{
	ga('send', 'event', 'Before You Go', 'Interacted', flag);
	document.getElementById('qdiv').style.display = 'none';
	if (rdiv != null) document.getElementById(rdiv).style.display = 'block';
	else document.getElementById('overlay').style.display='none';
}

function BYGDiss()
{
	document.getElementById('overlay').style.display='none';
	
	var date = new Date(); 
	date.setTime(date.getTime()+(30*24*60*60*1000));
	document.cookie='nldiss=1; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
		
}

function AccountChangePass(flag)
{
	if (flag)
	{
		if (Get('ovrconfirm').checked)
		{
			Get('ovrbtn').disabled = true;
			ajax('AccountChangePass_XD', 'req=closeaccount');
		}
		else
		{
			alert("You must check the 'confirm action' checkbox to proceed.");
		}
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = "You are about to close your wikiFeet account.<br>You will automatically be logged out and your login credentials will no longer work.<br><br><INPUT type=checkbox id=ovrconfirm> Confirm action<div style='text-align:center'><button id=ovrbtn onclick='CloseAccount(1)' class=redbutton>CLOSE ACCOUNT</button> &nbsp;&nbsp; <a href='javascript:Overlay()'>do not close account</a></div>";
		Overlay(d);
	}
}

function AccountChangePassword(flag)
{
	if (flag)
	{	
		if (Get('acc_newpass').value == '') return;
		Get('ovrbtn').disabled = true;
		ajax('AccountChangePassword_XD', 'req=accountchangepassword&newpass=' + Get('acc_newpass').value);
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = "Please enter the new password you'd like to use:<br><INPUT type=password id=acc_newpass> &nbsp; <button id=ovrbtn onclick='AccountChangePassword(1)'>UPDATE PASSWORD</button><br><br><a href='javascript:Overlay()'>or click here to go back</a>";
		Overlay(d);
	}
}

function AccountChangePassword_XD(output)
{
	if (output.substring(0,1)!='1')
	{
		var d = document.createElement('div');
		d.innerHTML = "<span style='color:red'>" + output.substring(1) + "</span><br>Please enter the new password you'd like to use:<br><INPUT type=password id=acc_newpass> &nbsp; <button id=ovrbtn onclick='AccountChangePassword(1)'>UPDATE PASSWORD</button><br><br><a href='javascript:Overlay()'>or click here to go back</a>";
		Overlay(d);
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = output.substring(1) + "<br><button onclick='Overlay()'>CLOSE</button></div>";
		Overlay(d);
	}	
}


function IgnoreGallery(flag)
{
	DisplayOptions(false);
	if (flag)
	{	
		Get('ovrbtn').disabled = true;
		ajax('IgnoreGllery_XD', 'req=ignoregallery&cid=' + messanger.cid);
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = "Gallery will no longer appear in search results, main page, browse pages or guild's pending comments,<br>and all email notifications on gallery will be disabled. Are you sure this is what you want?<br><br><button id=ovrbtn class=btn style='background:red' onclick='IgnoreGallery(1)'>I AM SURE</button> <button onclick='Overlay()' class=btn>I'm not sure! do not block this gallery</button>";
		Overlay(d);
	}
}

function IgnoreGllery_XD(output)
{
	if (output.substring(0,1)!='1')
	{
		alert(output.substring(1));
	}
	else
	{
		parent.location = '/';
	}	
}

function AccountChangeEmail(flag)
{
	if (flag)
	{	
		Get('ovrbtn').disabled = true;
		ajax('AccountChangeEmail_XD', 'req=accountchangeemail&email=' + Get('acc_newemail').value);
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = "Please enter a new email address for your wikiFeet account:<br><INPUT type=email id=acc_newemail> &nbsp; <button id=ovrbtn onclick='AccountChangeEmail(1)'>UPDATE EMAIL ADDRESS</button><br><br><a href='javascript:Overlay()'>or click here to go back</a>";
		Overlay(d);
	}
}

function AccountChangeEmail_XD(output)
{
	if (output.substring(0,1)=='X')
	{
		var d = document.createElement('div');
		d.innerHTML = "<span style='color:red'>" + output.substring(1) + "</span><br><button onclick='Overlay()'>CLOSE</button></div>";
		Overlay(d);

	}
	else if (output.substring(0,1)!='1')
	{
		var d = document.createElement('div');
		d.innerHTML = "<span style='color:red'>" + output.substring(1) + "</span><br>Please enter a new email address for your wikiFeet account:<br><INPUT type=email id=acc_newemail> &nbsp; <button id=ovrbtn onclick='AccountChangeEmail(1)'>UPDATE EMAIL ADDRESS</button><br><br><a href='javascript:Overlay()'>or click here to go back</a>";
		Overlay(d);
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = output.substring(1) + "<br><button onclick='Overlay()'>CLOSE</button></div>";
		Overlay(d);
	}	
}

function CloseAccount(flag)
{
	if (flag)
	{
		if (Get('ovrconfirm').checked)
		{
			Get('ovrbtn').disabled = true;
			ajax('CloseAccount_XD', 'req=closeaccount');
		}
		else
		{
			alert("You must check the 'confirm action' checkbox to proceed.");
		}
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = "You are about to close your wikiFeet account.<br>You will automatically be logged out and your login credentials will no longer work.<br><br><INPUT type=checkbox id=ovrconfirm> Confirm action<div style='text-align:center'><button id=ovrbtn onclick='CloseAccount(1)' class=redbutton>CLOSE ACCOUNT</button> &nbsp;&nbsp; <a href='javascript:Overlay()'>do not close account</a></div>";
		Overlay(d);
	}
}

function CloseAccount_XD(output)
{
	if (output.substring(0,1)!='1')
	{
		alert(output.substring(1));
	}
	else
	{
		var d = document.createElement('div');
		d.innerHTML = "Your wikiFeet account has been closed.<br><br><div style='text-align:center'><button id=ovrbtn onclick='window.location.reload(1)' class=redbutton>CLOSE</button></div>";
		Overlay(d);
	}	
}

function ContactUs()
{
	if (document.getElementById('c_message').value == '')
	{
		alert("The message field is empty, so there's nothing to send.");
		return;
	}
	document.getElementById('c_button').innerHTML = 'Sending...';
	document.getElementById('c_button').disabled = true;
	ajax('ContactUs_XD', 'req=contactus&email=' + encodeURIComponent(document.getElementById('c_email').value) + '&message=' + encodeURIComponent(document.getElementById('c_message').value));
}

function ContactUs_XD(output)
{
	var notvalid = '';
	if (output == 0) notvalid = "<br><span style='font-size:10pt'>However, the webmaster will not be able to send you a reply because you did not provided a vaild email address.</span>";
	document.getElementById('signupdiv').innerHTML = "<div style='padding:30px; color:white; font-size:18pt; font-weight:bold'>Your message has been sent successfully." + notvalid + "</div>";
}

function Discuss(btn, topic)
{
	var ta = document.getElementById('discuss_ta');
	if (ta.value == '')
	{
		alert('The textbox is empty. Write something in it.');
		ta.focus();
		return;
	}
	btn.disabled = true;
	ajaxpass('Discuss_XD', btn, 'req=discuss&topic=' + topic + '&comment=' + encodeURIComponent(ta.value));
}

function Discuss_XD(btn, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
		btn.disabled = false;
	}
	else
	{
		window.location.reload(1);
	}	
}


function DisplayOptions(flag)
{
	if (flag) { document.getElementById('goptions').style.display='block'; document.getElementById('optionslabel').innerHTML = 'Hide Settings'; }
	else { document.getElementById('goptions').style.display='none'; document.getElementById('optionslabel').innerHTML = 'Gallery Settings'; }
	document.getElementById('optionslabel').onclick = function() { DisplayOptions(!flag); };
	document.getElementById('noslides').checked = (getCookie('noslides') == 'true');
}

function EditSSize(type, value, gender)
{
	var cid = 0;
	if (type == 1) cid = messanger['cid'];
	ajax('EditSSize_XD', 'req=edit_ssize&cid=' + cid + '&value=' + value + '&gender=' + gender);
}

function EditSSize_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('ssize_label').innerHTML = output.substring(1);
	}	
}

function EditNation(type, value)
{
	var cid = 0;
	if (type == 1) cid = messanger['cid'];
	ajax('EditNation_XD', 'req=edit_nation&cid=' + cid + '&value=' + value);
}

function EditNation_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('nation_label').innerHTML = output.substring(1);
	}
}

function EditBDate(type, value)
{
	var cid = 0;
	if (type == 1)
	{
		cid = messanger['cid'];
		var newlabel = '';
		for (var i=0; i<value.length; i++)
		{
			if (i>9) break;
			if (i == 4 || i == 7)
			{
				if (value[i] == '-') newlabel += '-';
				else break;
			}
			else
			{
				if (value[i] >= '0' && value[i] <= '9') newlabel += value[i];
				else break;
			}			
		}
		if (newlabel.length == 4 || newlabel.length == 7) newlabel += '-';
		document.getElementById('bdate_input').value = newlabel;
		if (newlabel.length == 10) document.getElementById('bdate_input').disabled = true;
		else return;
	}
	ajax('EditBDate_XD', 'req=edit_bdate&cid=' + cid + '&value=' + value);
}

function EditBDate_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('bdate_label').innerHTML = output.substring(1);
	}
	if (output.substring(0,1)=='2') document.getElementById('bdate_input').focus();
}

function foty19(val, set)
{
	document.getElementById('foty190').style.background = val ? 'white' : 'red';
	document.getElementById('foty191').style.background = val ? 'green' : 'white';
	document.getElementById('foty191').style.color = val ? 'white' : 'green';
	document.getElementById('foty190').style.color = val ? 'red' : 'white';
	
	if (set) return;
	ajax('foty19_XD', 'req=foty&cid=' + messanger.cid + '&val=' + val);
}
function foty19_XD(output) {}

function fotygk(category, pid)
{
	this.disabled = true;
	ajax('fotygk_XD', 'req=fotygk&category=' + category + '&pid=' + pid + '&gender=' + messanger['gender']);
}
function fotygk_XD(output) { GuildTab_XD(6, output);}


function FOTY(l, r, w)
{
	ajax('FOTY_XD', 'req=foty&left=' + l + '&right=' + r + '&winner=' + w);
}

function FOTY_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		var o = JSON.parse(output.substring(1));
		document.getElementById('foty').innerHTML = o['this'];
		document.getElementById('fotynext').onclick = function() { document.getElementById('foty').innerHTML = o['next']; };		
	}
}

function ForgotOption(value)
{
	messanger['forgotmode'] = value;
	if (value == 1)
	{
		document.getElementById('newpass').style.display = 'table-row';
		document.getElementById('forgotmessage').innerHTML = 'We will send you an e-mail message containing a confirmation link.<br>once you click on the provided link, your password will be changed.'; 
			
	}
	else if (value == 2)
	{
		document.getElementById('newpass').style.display = 'none';
		document.getElementById('forgotmessage').innerHTML = 'We will send you an e-mail message containing your username (login name).'; 
	}
	else if (value == 3)
	{
		document.getElementById('newpass').style.display = 'table-row';
		document.getElementById('forgotmessage').innerHTML = 'We will send you an e-mail message reminding you of your login name, and a confirmation link for your new password.<br>once you click on the provided link, your password will be updated.'; 
	}
}

function GCMKey(e)
{
	var btn = document.getElementById('gcs_btn');
	if (btn.disabled == true) return;
	var keyCode = ('which' in e) ? e.which : e.keyCode;
	if (keyCode == 13 && !e.shiftKey) {
		e.preventDefault();
	    GC_submit(btn);
	}
}

function GuildTab(val)
{
	
	document.getElementById('guildstuff').innerHTML = "<div style='height:400px'></div>";
	messanger['lastchat'] = 0;
	ajaxpass('GuildTab_XD', val, 'req=guildtab&val=' + val + '&last=0&gender=' + messanger['gender']);
	clearTimeout(messanger['gtimer']);
}

function GuildTab_XD(val, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		messanger['gpf'] = false;
		for (var i=0; i<7; i++)
		{
			if (document.getElementById('guildtab' + i) == null) continue;
			if (val == i) document.getElementById('guildtab' + i).style.background = 'white';
			else document.getElementById('guildtab' + i).style.background = '#bbb';
			if (val == i) document.getElementById('guildtab' + val).style.cursor = 'default';
			else document.getElementById('guildtab' + i).style.cursor = 'pointer';
			if (val == i) document.getElementById('guildtab' + val).onclick = '';
			else document.getElementById('guildtab' + i).onclick = function(passobj) { return function() { GuildTab(passobj); }}(i);
		}

		if (val == 0) document.getElementById('guildstuff').innerHTML = output.substring(1);
		else if (val == 5 || val == 6) document.getElementById('guildstuff').innerHTML = output.substring(1);
		else if (val == 1)// Drawing chat window:
		{
			messanger['firstchat'] = null;
			var guildexp = output.substring(0,1);
			if (guildexp > 1) document.getElementById('guildstuff').innerHTML = "<div style='display:flex'><div id=chatter style='flex:1'></div><div id=chatonline></div></div><div style='position:relative'><BUTTON id=gcs_btn style='position:absolute; right:5px; bottom:0px; width:60px' onclick='GC_submit(this)'>Send</BUTTON><div style='margin:5px 75px 5px 5px'><TEXTAREA id=gcmessage style='width:100%; height:50px; font-family:arial; font-size:10pt' onkeydown='GCMKey(event)'></TEXTAREA></div></div>";
			else document.getElementById('guildstuff').innerHTML = "<div id=chatter></div><div style='background:white; padding:10px; font-weight:bold'>You need to reach a guild exp. of 500 to participate in the chat.<br>(Review comments to gain exp)</div></div>";
			GC_timer_XD(output);
			GC_loadolder(-1);
		}
		else if (val == 2)
		{
			var guildexp = output.substring(0,1);
			if (guildexp > 2) document.getElementById('guildstuff').innerHTML = "<div id=chatter>" + output.substring(1) + "</div><div style='position:relative'><BUTTON style='position:absolute; right:5px; bottom:0px; width:60px' onclick='GP_submit(this)'>Create</BUTTON><div style='margin:5px 75px 5px 5px'><TEXTAREA id=gpquestion style='width:100%; height:50px; font-family:arial; font-size:10pt' onfocus=\"GP_focus()\">Describe your notion here.</TEXTAREA><br><small style='color:#444'>&nbsp;Vote choices would be: Yes, No, Abstain</small></div></div>";
			else document.getElementById('guildstuff').innerHTML = "<div id=chatter>" + output.substring(1) + "</div><div style='background:white; padding:10px; font-weight:bold'>Once you reach a guild exp. of 10,000 you'll be able to create a poll.<br>(Review comments to gain exp)</div></div>";
		}
		else if (val == 3)
		{
			var guildexp = output.substring(0,1);
			if (guildexp > 3) document.getElementById('guildstuff').innerHTML = "<div id=chatter>" + output.substring(1) + "</div><div style='position:relative'><BUTTON style='position:absolute; right:5px; bottom:0px; width:60px' onclick='GA_submit(this)'>Create</BUTTON><div style='margin:5px 75px 5px 5px'><TEXTAREA id=gpquestion style='width:100%; height:50px; font-family:arial; font-size:10pt' onfocus=\"GP_focus()\">Please write a guild announcement here.</TEXTAREA></div></div>";
			else document.getElementById('guildstuff').innerHTML = "<div id=chatter>" + output.substring(1) + "</div><div style='background:white; padding:10px; font-weight:bold'>Only Guild Knights can post announcements.</div></div>";
		}
		else if (val == 4)
		{
			var gcdmark = output.indexOf('|');
			document.getElementById('guildstuff').innerHTML = "<div id=chatter></div><div style='padding:5px; background:white; border:1px solid black; margin:3px'>Displaying chat log for <INPUT id=gcdate type=text style='width:100px' value='" + output.substring(1, gcdmark) + "'> <BUTTON onclick=\"GCHistory(this, document.getElementById('gcdate').value)\">Submit</BUTTON> &nbsp;&nbsp;<small>(Time is displayed in EST)</small></div>";
			//var allitems = output.substring(gcdmark + 1).split('<<');
			messanger['lastchat'] = 0;
			//for (var i in allitems) { GC_drawitem(allitems[i], true); }
			var jobj = JSON.parse(output.substring(gcdmark + 1));
			for (var i in jobj) { GC_drawitem(jobj[i], true); }
		
		}
	};	
}

function timePad(num)
{
	return ((num < 10) ? ("0" + num) : num);
}

function GA_submit(btn)
{
	if (messanger['gpf'] != true || document.getElementById('gpquestion').value == '')
	{
		alert('Please compose an announcement');
		document.getElementById('gpquestion').focus();
		return;
	}
	btn.disabled = true;
	ajaxpass('GA_submit_XD', btn, 'req=gasubmit&question=' + encodeURIComponent(document.getElementById('gpquestion').value));
}

function GA_submit_XD(btn, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		messanger['gpf'] = false;
		btn.disabled = false;
		document.getElementById('gpquestion').value = '';
		document.getElementById('chatter').innerHTML = output.substring(1);
	}
}

function GA_delete(comment)
{
	if (confirm("Are you sure you want to delete this announcement? You cannot undo this action!"))
		ajaxpass('GA_delete_XD', comment, 'req=gadelete&comment=' + comment);
}

function GA_delete_XD(comment, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('chatter').removeChild(document.getElementById('annbox' + comment));
	}
}

function GCHistory(button, gcdate)
{
	button.disabled = true;
	ajaxpass('GuildTab_XD', 4, 'req=guildtab&val=4&gcdate=' + gcdate);
	clearTimeout(messanger['gtimer']);
}

function GC_drawOLDitem(data, gch, older)
{
	var splitdata = data.split('<');
	if (splitdata.length < 4) return;

	// Fix for repeating messages after submit:
	if (messanger['lastchat'] >= splitdata[0] && older != true) return;
	if (older != true) messanger['lastchat'] = splitdata[0];
	
	if (messanger['firstchat'] == null || messanger['firstchat'] > splitdata[0]) messanger['firstchat'] = splitdata[0];
	
	var ctime;
	
	
	// GCHistory fix:
	if (gch == true) ctime = splitdata[3];
	else
	{
		var t = new Date();
		t.setSeconds(t.getSeconds() - splitdata[3]);
		ctime = timePad(t.getHours()) + ":" + timePad(t.getMinutes()) + ":" + timePad(t.getSeconds());
	}
	
	var item = document.createElement('div');
	var gclass = 'R';
	if (splitdata[4] > 4) gclass = 'X';
	else if (splitdata[4] > 3) gclass = 'K';
	else if (splitdata[4] > 2) gclass = 'D';
	else if (splitdata[4] > 1) gclass = 'E';
	
	item.innerHTML = "<div class=chatheader" + gclass + "><div style='float:right'>" + ctime + "</div>" + splitdata[1] + "</div>" + splitdata[2];
	var container = document.getElementById('chatter');
	if (older == true) container.appendChild(item);
	else container.insertBefore(item, container.firstChild);
}

function GC_loadolder(idx)
{
	if (idx > 0)
	{
		document.getElementById('chatter').removeChild(document.getElementById('gcloadolder'));
		ajax('GC_loadolder_XD', 'req=guildtab&val=1&last=-' + messanger['firstchat']);
	}
	else
	{
		var item = document.createElement('div');
		item.id = 'gcloadolder';
		item.style.background = 'none';
		item.style.border = 'none';
		item.style.cursor = 'pointer';
		item.style.color = 'white';
		item.style.paddingLeft = '30px';
		item.style.textDecoration = 'underline';
		item.style.fontWeight = 'bold';
		item.style.fontSize = '9pt';
		item.onclick = function() { GC_loadolder(messanger['firstchat']); }
		item.innerHTML = "Load older messages...";
		var container = document.getElementById('chatter');
		container.appendChild(item);
	}
}

function GC_loadolder_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		//var allitems = output.substring(1).split('<<');
		//for (var i in allitems) { GC_drawitem(allitems[i], false, true); }
		var jobj = JSON.parse(output.substring(1));
		for (var i in jobj) { GC_drawitem(jobj[i], false, true); }
		if (jobj.length >= 40) GC_loadolder(-1);
	}

}

function replaceURLWithHTMLLinks(text) {
    var exp = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;()']*[-A-Z0-9+&@#\/%=~_|()])/ig;
    
    //var exp = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;()]*[-A-Z0-9+&@#\/%=~_|()])/ig;
    return text.replace(exp,'<a href="$1" target=_blank>$1</a>'); 
}


function GC_drawitem(data, gch, older)
{
	if (data.online)
	{
		var inhtml = "<div style='background:white; height:100%; padding:10px'><u>Online:</u><br>";
		for (var i in data.members) inhtml += data.members[i] + "<br>";
		for (var i in data.newbies) inhtml += "<span style='color:#888'>" + data.newbies[i] + "</span><br>";
		inhtml += "</div>";
		Get('chatonline').innerHTML = inhtml;
		return;	
	}
	
	// Fix for repeating messages after submit:
	if (messanger['lastchat'] >= data['idx'] && older != true) return;
	if (older != true) messanger['lastchat'] = data['idx'];
	
	if (messanger['firstchat'] == null || messanger['firstchat'] > data['idx']) messanger['firstchat'] = data['idx'];
	
	var ctime;
	
	
	// GCHistory fix:
	if (gch == true) ctime = data['secago'];
	else
	{
		var t = new Date();
		t.setSeconds(t.getSeconds() - data['secago']);
		ctime = timePad(t.getHours()) + ":" + timePad(t.getMinutes()) + ":" + timePad(t.getSeconds());
	}
	
	var item = document.createElement('div');
	var gclass = 'R';
	if (data['gstat'] > 4) gclass = 'X';
	else if (data['gstat'] > 3) gclass = 'K';
	else if (data['gstat'] > 2) gclass = 'D';
	else if (data['gstat'] > 1) gclass = 'E';
	
	var prof = "<a href='/messages/" + data['uid'] + "' target=_blank><div style='background-position:center center; background-size:contain; background-repeat:no-repeat; background-image:url(/profiles/" + data['uid'] + ".jpg); height:40px; width:40px; float:left; margin-right:10px; border-radius:6px'></div></a>";
	if (data['uid'] == '') prof = '';
	
	
	if (data['message'].substring(0, 4) == "/me ")
		item.innerHTML = prof + "<div class=chatheader" + gclass + "><div style='float:right'>" + ctime + " </div>" + data['nickname'] + " " + data['message'].substring(4) + "</div>";
	else item.innerHTML = prof + "<div class=chatheader" + gclass + "><div style='float:right'>" + ctime + " </div><span onclick='GC_At(this)'>" + data['nickname'] + "</span></div>" + replaceURLWithHTMLLinks(data['message']);
	var container = document.getElementById('chatter');
	if (older == true) container.appendChild(item);
	else container.insertBefore(item, container.firstChild);
}

function GC_At(element)
{
	var gcm = document.getElementById('gcmessage');
	if (gcm) gcm.value += '@' + element.innerHTML + ' ';
	gcm.focus();
}

function GC_timer()
{
	ajax('GC_timer_XD', 'req=guildtab&val=1&last=' + messanger['lastchat']);
}

function GC_timer_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		//var allitems = output.substring(1).split('<<');
		//for (var i in allitems) { GC_drawitem(allitems[i]); }
		var jobj = JSON.parse(output.substring(1));
		for (var i in jobj) { GC_drawitem(jobj[i]); }
		messanger['gtimer'] = setTimeout( "GC_timer()", 3000);
	}
}

function GC_submit(btn)
{
	if (document.getElementById('gcmessage').value == '') return;
	btn.disabled = true;
	clearTimeout(messanger['gtimer']);
	ajaxpass('GC_submit_XD', btn, 'req=gcsubmit&last=' + messanger['lastchat'] + '&message=' + encodeURIComponent(document.getElementById('gcmessage').value));
}

function GC_submit_XD(btn, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('gcmessage').value = '';
		btn.disabled = false;
		//var allitems = output.substring(1).split('<<');
		//for (var i in allitems) { GC_drawitem(allitems[i]); }
		var jobj = JSON.parse(output.substring(1));
		for (var i in jobj) { GC_drawitem(jobj[i]); }
		messanger['gtimer'] = setTimeout( "GC_timer()", 3000);
	}
}

function GK_flag(idx, topic)
{
	var text = prompt('Enter flag comment (or leave emply to remove flag)');
	if (text != null)
	{
		ajaxpass('GK_flag_XD', topic, 'req=gkflag&idx=' + idx + '&text=' + encodeURIComponent(text));
	}
}

function GK_flag_XD(idx, output)
{
	if (output.substring(0,1)=='0') alert(output.substring(1));
	else if (output.substring(1) == '') { document.getElementById('w_post' + idx).parentNode.removeChild(document.getElementById('w_post' + idx)); }
	else
	{
		var div = document.createElement('div');
		div.innerHTML = output.substring(1);
		document.getElementById('w_post' + idx).parentNode.replaceChild(div.firstChild, document.getElementById('w_post' + idx));
		div = null;
	}
}

function GP_delete(poll)
{
	if (confirm("Are you sure you want to delete this post? You cannot undo this action!"))
		ajaxpass('GP_delete_XD', poll, 'req=gpdelete&poll=' + poll);
}

function GP_delete_XD(poll, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('chatter').removeChild(document.getElementById('pollbox' + poll));
	}
}

function GP_focus()
{
	if (messanger['gpf']) return;
	messanger['gpf'] = true;
	document.getElementById('gpquestion').value = '';
	document.getElementById('gpquestion').focus();
}

function GP_submit(btn)
{
	if (messanger['gpf'] != true || document.getElementById('gpquestion').value == '')
	{
		alert('Please compose a question for the poll');
		document.getElementById('gpquestion').focus();
		return;
	}
	btn.disabled = true;
	ajaxpass('GP_submit_XD', btn, 'req=gpsubmit&question=' + encodeURIComponent(document.getElementById('gpquestion').value));
}

function GP_submit_XD(btn, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		messanger['gpf'] = false;
		btn.disabled = false;
		document.getElementById('gpquestion').value = '';
		document.getElementById('chatter').innerHTML = output.substring(1);
	}
}

function GP_vote(button, poll)
{
	var value;
	var radios = button.parentNode.getElementsByTagName('input');
	for (var i = 0; i < radios.length; i++) { if (radios[i].checked) value = radios[i].value; }
	if (value == null) alert("You need to select one of the options before submitting your vote");
	else ajaxpass('GP_vote_XD', poll, 'req=gpvote&poll=' + poll + '&value=' + value);
}

function GP_vote_XD(poll, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
		window.location.reload(1);
	}
	else
	{
		var div = document.createElement('div');
		div.id = 'pollbox' + poll;
		div.innerHTML = output.substring(1);
		document.getElementById('chatter').replaceChild(div,document.getElementById('pollbox' + poll));

	}	
}

function GS_Expand()
{
	var slip = document.getElementById('guildslip');
	if (slip)
	{
		var div = document.createElement('div');
		div.id = 'guildslip_e';
		slip.parentNode.replaceChild(div, slip);
		
		var header = document.createElement('div');
		header.style.borderBottom = '2px solid #aaa';
		header.style.padding = '4px 20px';
		header.style.display = 'flex';
		header.style.justifyContent = 'space-between';
		div.appendChild(header);
		
		var d = document.createElement('div');
		d.style.cursor = 'pointer';
		d.innerHTML = 'Guild Slip &#9660;';
		d.onclick = function() { GS_Expand(); }
		header.appendChild(d);
		
		d = document.createElement('div');
		d.id = 'gs_flag';
		header.appendChild(d);
		
		d = document.createElement('div');
		d.id = 'gs_messages';
		d.style.overflow = 'auto';
		d.style.background = '#666';
		d.style.flex = '1';
		div.appendChild(d);
		
		d = document.createElement('textarea');
		d.id = 'gs_text';
		d.style.height = '40px';
		d.style.width = '90%';
		d.placeholder = 'compose message..';
		div.appendChild(d);

		d = document.createElement('div');
		d.style.align = 'left';
		div.appendChild(d);
		
		var b = document.createElement('button');
		b.innerHTML = 'Submit';
		b.id = 'gs_button';
		b.onclick = function() { GS_Submit(); }
		d.appendChild(b);
		ajax('GS_Submit_XD', 'req=gslip&cid=' + messanger.cid);
	}
	else
	{
		var ex = document.getElementById('guildslip_e');
		var d = document.createElement('div');
		d.id = 'guildslip';
		d.innerHTML = 'Guild Slip &#9650;';
		d.onclick = function() { GS_Expand(); }
		ex.parentNode.replaceChild(d, ex);
	}
}

function GS_Submit()
{
	var text = document.getElementById('gs_text').value;
	if (text == '')
	{
		alert("The message field is empty, so there's nothing to send.");
		return;
	}
	document.getElementById('gs_button').innerHTML = 'Sending...';
	document.getElementById('gs_button').disabled = true;
	ajax('GS_Submit_XD', 'req=gslip&cid=' + messanger.cid + '&message=' + encodeURIComponent(text));
}

function GS_Submit_XD(output)
{
	document.getElementById('gs_button').innerHTML = 'Submit';
	document.getElementById('gs_button').disabled = false;
	
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		document.getElementById('gs_text').value = '';
		
		var lg = document.getElementById('gs_messages');
		lg.textContent = '';
		
		var v = JSON.parse(output.substring(1));
		if (v.flag)
		{
			var div = document.createElement('div');
			div.style.color = 'white';
			div.style.padding = '2px 10px';
			if (v.flag.flagged)
			{
				div.style.background = 'red';
				div.textContent = 'Flagged by ' + v.flag.nickname;
				
				var btn = document.createElement('button');
				btn.textContent = 'Unflag this slip';
				btn.onclick = function() {
					ajax('GS_Submit_XD', 'req=gslip&flag=0&cid=' + messanger.cid);
				};
				document.getElementById('gs_flag').textContent = '';
				document.getElementById('gs_flag').appendChild(btn);
			}
			else
			{
				var btn = document.createElement('button');
				btn.textContent = 'Flag this slip';
				btn.onclick = function() {
					ajax('GS_Submit_XD', 'req=gslip&flag=1&cid=' + messanger.cid);
				};
				document.getElementById('gs_flag').textContent = '';
				document.getElementById('gs_flag').appendChild(btn);
			
				div.style.background = 'green';
				div.textContent = 'Unflagged by ' + v.flag.nickname;
			}
			lg.appendChild(div);
				
		}
		else
		{
			var btn = document.createElement('button');
			btn.textContent = 'Flag this slip';
			btn.onclick = function() {
				ajax('GS_Submit_XD', 'req=gslip&flag=1&cid=' + messanger.cid);
			};
			document.getElementById('gs_flag').textContent = '';
			document.getElementById('gs_flag').appendChild(btn);

		}
		
		
		for (var i in v.messages)
		{
			var div = document.createElement('div');
			div.style.padding = '10px';
			div.style.borderBottom = '1px solid #aaa';
			
			var d = document.createElement('div');
			d.style.fontWeight = 'bold';
			d.textContent = v.messages[i].nickname;
			div.appendChild(d);
			
			v.messages[i].message = v.messages[i].message.replace(/</g, '&lt;');
			var pics = v.messages[i].message.match(/([0-9]{5,})/g);
			var replaced = {};
			if (pics)
			{
				for (var j in pics)
				{
					if (pics[j] in replaced) continue;
					replaced[pics[j]] = 1;
					var re = new RegExp(pics[j], "g");
					if (pics[j] in messanger.pexist) v.messages[i].message = v.messages[i].message.replace(re, `<span onclick='pFocus(${pics[j]})' style='cursor:pointer; color:#acf'>${pics[j]}</span>`);
					else v.messages[i].message = v.messages[i].message.replace(re, `<span style='color:black'>${pics[j]}</span>`);
				}
			}
			
			d = document.createElement('div');
			d.style.whiteSpace = 'pre-line';
			d.innerHTML = v.messages[i].message;
			div.appendChild(d);
			
			lg.appendChild(div);
		}
	}	
}

function pFocus(pid)
{
	for (var i in messanger.gdata)
	{
		if (messanger.gdata[i].pid == pid)
		{
			pSkipPage(Math.floor(i/100 + 1));
			messanger.gdata[i].pdiv.scrollIntoView();
			messanger.gdata[i].pdiv.style.transition = 'border 1s';
			messanger.gdata[i].pdiv.style.border = '1px solid red';
			setTimeout(function() { messanger.gdata[i].pdiv.style.border = null; }, 2500);
			break;	
		}
	}
}

function P_vote(button, poll)
{
	var value;
	var radios = button.parentNode.parentNode.getElementsByTagName('input');
	for (var i = 0; i < radios.length; i++) { if (radios[i].checked) value = radios[i].value; }
	if (value == null) alert("You need to select one of the options before submitting your vote");
	else
	{
		button.disabled = true;
		ajaxpass('P_vote_XD', {b:button, p:poll}, 'req=pvote&poll=' + poll + '&value=' + value);
	}
}

function P_vote_XD(v, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
		v['b'].disabled = false;
	}
	else
	{
		var date = new Date(); 
		date.setTime(date.getTime()+(30*24*60*60*1000));
		document.cookie='poll=' + v['p'] + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
		Get('polltext').innerHTML = output.substring(1);
	}	
}

function Get(name)
{
	return document.getElementById(name);
}

function Class(name, cname)
{
	Get(name).className = cname;
}
		
function GetRecipient(field)
{
	field.disabled = true;
	ajaxpass('GetRecipient_XD', field, 'req=getrecipient&name=' + field.value);
}

function GetRecipient_XD(field, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
		field.disabled = false;
		field.focus();
	}
	else
	{
		parent.location = '/messages/' + output.substring(1);
	}
}

function Overlay(div)
{
	var ovr = Get('overlay')
	if (ovr == null)
	{
		ovr = document.createElement('div');
		ovr.id = 'overlay';
	}
	
	if (div != null)
	{
		while (ovr.hasChildNodes()) { ovr.removeChild(ovr.lastChild); }
		ovr.appendChild(div);
		document.body.appendChild(ovr);
	}
	else
	{
		document.body.removeChild(ovr);
	}
}


function PM_inbox(obj)
{
	var div = document.getElementById('mbox');
	for (var i in obj)
	{
		var containerdiv = document.createElement('div');
		var titlediv = document.createElement('div');
		var timediv = document.createElement('div');
		var namespan = document.createElement('span');
		var contentdiv = document.createElement('div');
		var dirspan = document.createElement('span');
		var messagespan = document.createElement('span');
		var archive = document.createElement('img');
		
		namespan.innerHTML = obj[i].nickname;
		if (obj[i].unread > 0)
		{
			containerdiv.style.fontWeight = 'bold';
			namespan.innerHTML += ' (' + obj[i].unread + ')';
		}
		if (obj[i].io == '1')
		{
			dirspan.innerHTML = '&#8663;';
			dirspan.style.color = 'blue';
		} 
		else 
		{
			dirspan.innerHTML = '&#8665;';
			dirspan.style.color = 'orange';
		}
		dirspan.style.paddingRight = '10px';
		
		
		var t = new Date();
		t.setMinutes(t.getMinutes() - obj[i].ago);
		timediv.innerHTML = t.toLocaleDateString() + ' ' + t.toLocaleTimeString();		
		timediv.style.float = 'right';
		timediv.style.color = 'black';
		titlediv.style.color = 'black';
		titlediv.style.textDecoration = 'underline';
		containerdiv.className = 'inboxitem';
		messagespan.innerHTML = obj[i].message;
		contentdiv.style.paddingTop = '5px';
		contentdiv.style.cursor = 'pointer';
		
		archive.src = '/images/archive_icon.png';
		archive.title = 'Archive conversation';
		archive.className = 'archive';
		archive.onclick = function(j) { return function() { PM_archive(this, j); }}(obj[i].target);
		
		contentdiv.onclick = function(j) { return function() { parent.location='/messages/' + j; }}(obj[i].target);
		
		div.appendChild(containerdiv);
		containerdiv.appendChild(titlediv);
		titlediv.appendChild(timediv);
		titlediv.appendChild(namespan);
		containerdiv.appendChild(contentdiv);
		contentdiv.appendChild(dirspan);
		contentdiv.appendChild(messagespan);
		containerdiv.appendChild(archive);
	}
}

function PM_archive(button, uid)
{
	if (confirm("If you proceed, the conversation will be hidden from the inbox."))
	{
		button.onclick = null;
		ajax('PM_archive_XD', 'req=pmarchive&uid=' + uid);
	}
}

function PM_archive_XD(output)
{
	window.location.reload(1);
}

function PM_singleNew(uid, unread, obj)
{
	var div = document.getElementById('mbox');

	var a = document.createElement('div');
	div.insertBefore(a, div.childNodes[0]);
	var lastidx = obj[obj.length-1].idx;
	for (var i in obj)
	{
		var containerdiv = document.createElement('div');
		var titlediv = document.createElement('div');
		var timediv = document.createElement('div');
		var namespan = document.createElement('span');
		var contentdiv = document.createElement('div');
		
		
		var t = new Date();
		t.setMinutes(t.getMinutes() - obj[i].ago);
		timediv.innerHTML = t.toLocaleDateString() + ' ' + t.toLocaleTimeString();
		timediv.style.float = 'right';
		timediv.style.color = 'black';
		titlediv.style.color = 'black';
		titlediv.style.textDecoration = 'underline';
		containerdiv.className = 'pmitem';
		
		if (i < unread) containerdiv.style.backgroundColor = '#fea';
		
		contentdiv.innerHTML = obj[i].message;
		namespan.innerHTML = obj[i].nickname;
		
		div.insertBefore(containerdiv, div.childNodes[0]);
		containerdiv.appendChild(titlediv);
		titlediv.appendChild(timediv);
		titlediv.appendChild(namespan);
		
		containerdiv.appendChild(contentdiv);
	}
	//a.innerHTML = '-';
	a.scrollIntoView();
	div.onscroll = function() { LoadOlderPMs(uid, lastidx); }
}

function LoadOlderPMs(uid, lastidx)
{
	if (messanger['loadingolderpms'] == true) return;
	var div = document.getElementById('mbox');

    if (div.scrollTop <= 2)
    {
        messanger['loadingolderpms'] = true;
        ajaxpass('LoadOlderPMs_X', uid, 'req=loadolderpms&uid=' + uid + '&lastidx=' + lastidx);

	};
}

function LoadOlderPMs_X(uid, response)
{
	var div = document.getElementById('mbox');
	
	if (response.substring(0,1)=='0')
	{
		alert(response.substring(1));
	}
    else
    {
		var obj = JSON.parse(response.substring(1));
		var div = document.getElementById('mbox');
		if (obj.length > 0)
		{
			PM_singleNew(uid, 0, obj);
			messanger['loadingolderpms'] = false;
		}
		else
		{
			div.onscroll = null;
			div.insertBefore(document.createTextNode("no earlier messages"), div.childNodes[0]);	
		}
   	}
}


function PM_single(unread, obj)
{
	var div = document.getElementById('mbox');
	for (var i in obj)
	{
		var containerdiv = document.createElement('div');
		var titlediv = document.createElement('div');
		var timediv = document.createElement('div');
		var namespan = document.createElement('span');
		var contentdiv = document.createElement('div');
		
		
		var t = new Date();
		t.setMinutes(t.getMinutes() - obj[i].ago);
		timediv.innerHTML = t.toLocaleDateString() + ' ' + t.toLocaleTimeString();
		timediv.style.float = 'right';
		timediv.style.color = 'black';
		titlediv.style.color = 'black';
		titlediv.style.textDecoration = 'underline';
		containerdiv.className = 'pmitem';
		
		if (obj.length - i <= unread) containerdiv.style.backgroundColor = '#fea';
		
		contentdiv.innerHTML = obj[i].message;
		namespan.innerHTML = obj[i].nickname;
		
		div.appendChild(containerdiv);
		containerdiv.appendChild(titlediv);
		titlediv.appendChild(timediv);
		titlediv.appendChild(namespan);
		containerdiv.appendChild(contentdiv);
	}
	var a = document.createElement('div');
	containerdiv.appendChild(a);
	//a.innerHTML = '-';
	a.scrollIntoView();
}

function PM_send(uid, button)
{
	var comp = document.getElementById('compose');
	if (comp.value == '') return;
	comp.disabled = true;
	button.disabled = true;
	ajaxpass('PM_send_XD', button, 'req=pmsend&uid=' + uid + '&message=' + encodeURIComponent(comp.value));
}

function PM_send_XD(button, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
		var comp = document.getElementById('compose');
		button.disabled = false;
		comp.disabled = false;
	}
	else
	{
		window.location.reload(1);
	}
	
	
}


function PassReset()
{
	if (validateEmail(document.getElementById('pr_email').value) == false)
	{
		document.getElementById('forgotmessage').innerHTML = "<span class=warn>Please enter a valid e-mail addresss</span>";
		document.getElementById('pr_email').focus();
	}
	else if (document.getElementById('pr_pass').value == '' && messanger['forgotmode'] != 2)
	{
		document.getElementById('forgotmessage').innerHTML = "<span class=warn>Please enter a new password</span>";
		document.getElementById('pr_pass').focus();
	}
	else if (document.getElementById('pr_pass').value.match(/^[A-Z0-9]+$/i) == null && messanger['forgotmode'] != 2)
	{
		document.getElementById('forgotmessage').innerHTML = "<span class=warn>Illegal password. Please use letters and numbers only.</span>";
		document.getElementById('pr_pass').value = '';
		document.getElementById('pr_pass').focus();
	}
	else
	{
		document.getElementById('pr_button').disabled = true;
		ajax('PassReset_XD', 'req=passreset&type=' + document.getElementById('pr_type').value + '&email=' + encodeURIComponent(document.getElementById('pr_email').value) + '&password=' + encodeURIComponent(document.getElementById('pr_pass').value));
	}
}

function PassReset_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		document.getElementById('forgotmessage').innerHTML = "<span class=warn>" + output.substring(1) + "</span>";
		document.getElementById('pr_pass').value = '';
		document.getElementById('pr_button').disabled = false;
	}
    else
    {
		document.getElementById('pr_button').style.display = 'none';
		document.getElementById('signupdiv').innerHTML = "<span style='font-weight:bold'>" + output.substring(1) + "</span>";
	};
}

function LoginForm()
{
	document.getElementById('userbox').innerHTML = "<form name=login id=login method=post action='/perl/ajax.fpl' onSubmit='return DoLogin()' style='margin:0px' target=thehiddenlogin><INPUT type=hidden name=req value=login><div id=loginstatus>Login to wikiFeet:</div><table><tr><td>Username:&nbsp;</td><td><INPUT class=loginfield tabindex=1 type=text name=username></td></tr><tr><td>Password:&nbsp;</td><td><INPUT class=loginfield tabindex=2 type=password name=password></td></tr><tr><td colspan=2><INPUT id=submitbtn type=submit class=smallbtn tabindex=4 value='Submit' style='float:right'><INPUT tabindex=3 type=checkbox name=remember> remember me</td></tr></table></form>";
	document.getElementById('login').username.focus();
}

function DoLogin()
{
	document.cookie='passkey=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
	document.getElementById('submitbtn').disabled = true;	
}

function DoLogin_XD()
{
	var result = (document.getElementById('thehiddenlogin').contentWindow || document.getElementById('thehiddenonlogin').contentDocument);
	if (result.document) result = result.document;
	var output = result.body.innerHTML;
	if (output.substring(0,1)=='0')
	{
		document.getElementById('loginstatus').innerHTML=output.substring(1);
		document.getElementById('loginstatus').style.color = 'red';
		document.getElementById('login').password.value='';
		document.getElementById('login').password.focus();
		document.getElementById('submitbtn').disabled = false;
	}
    else if (output.substring(0,1)=='1')
    {
		//if (document.getElementById('login').remember.checked == true)
		//{
		//	var date = new Date();
		//	date.setTime(date.getTime()+(30*24*60*60*1000));
		//	document.cookie='passkey=' + output.substring(1) + '; expires=' + date.toGMTString() + '; path=/';
		//}
		//else
		//{
		//	document.cookie='passkey=' + output.substring(1) + '; path=/;';
		//};
	window.location.reload(1);
	};
}

function LoadOlderComments(e)
{
	if (messanger['loadingoldercomments'] == true) return;
    //if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight)
	if ((window.innerHeight + window.pageYOffset) >= document.body.offsetHeight - 2)
    {
	    gtag('event', 'LoadOlderComments', { 'event_label': messanger['cid']});
        messanger['loadingoldercomments'] = true;
        var div = document.createElement('div');
	        
        if (messanger['lastcomment'] == '')
        {
	        div.innerHTML = 'End of comments.';
        }
        else
        {
        	div.innerHTML = 'Loading older...';
        	ajaxpass('LoadOlderComments_X', div, 'req=loadoldercomments&cid=' + messanger['cid'] + '&lastidx=' + messanger['lastcomment']);
        }
	    document.getElementById('thewall').appendChild(div);
	};
}

function LoadOlderComments_X(div, response)
{
	if (response.substring(0,1)=='0')
	{
		alert(response.substring(1));
	}
    else
    {
    	var sep = response.indexOf(';');
    	messanger['lastcomment'] = response.substring(1, sep);
    	div.innerHTML = response.substring(sep + 1);
		document.getElementById('thewall').appendChild(div);
		messanger['loadingoldercomments'] = false;
	}
}

function LogOut()
{
	document.cookie='passkey=0; path=/; domain=' + domain;
	document.getElementById('userbox').innerHTML="<div id=loginstatus style='text-align:left; text-indent:0px'>Logged Out.</div>";
}

function RankChange(rank,gen)
{
	document.getElementById('rankbar').style.width = (21.4 * rank) + 'px';
	if (gen) document.getElementById('ranktitle').innerHTML = '(' + rank + '/5)';
	else document.getElementById('ranktitle').innerHTML = ranknames[rank];
}

function RankClick(rank)
{
	messanger.originalRank = rank;
	ajax('RankClick_XD', 'req=rank&cid=' + messanger.cid + '&rank=' + messanger.originalRank)
}

function RankClick_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		document.getElementById('ranktitle').innerHTML = "(error)";
		alert(output.substring(1));
	}
    else if (output.substring(0,1)=='-')
    {
	    messanger.originalRank = 0;
		document.getElementById('ranktitle').innerHTML = "(unvoted)";
		if (document.getElementById('wallranklabel') != null) document.getElementById('wallranklabel').innerHTML = 'unvoted';
	}
	else
    {
		document.getElementById('ranktitle').innerHTML = "(rank saved)";
		if (document.getElementById('wallranklabel') != null) document.getElementById('wallranklabel').innerHTML = ranknames[messanger.originalRank];
	};
}

function MorePics(lastpid)
{
	if (messanger.mode != null) { alert('cannot load pictures while in ' + messanger.mode + ' mode'); return; }
	document.getElementById('mp_button').disabled = true;
	ajax('MorePics_XD', 'req=morepics&cid=' + messanger.cid + '&lastpid=' + lastpid)
}

function MorePics_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		var data = output.split('|');
		var somemore = data[1];
		if (somemore > 100) { somemore = 100; }
		var pidlist = data[2].split(',');
		messanger.pidlist = messanger.pidlist.concat(pidlist);		
		document.getElementById('thepics').innerHTML += data[0];
		if (data[1] == 0) { document.getElementById('morepics').innerHTML = ''; }
		else { document.getElementById('morepics').innerHTML = data[1] + " pics left <button id=mp_button onclick=\"MorePics(" + pidlist[pidlist.length-1] + ")\">Load " + somemore + " more</button>";}
	};
}

function MoreWalls(lastpw)
{
	document.getElementById('mw_button').disabled = true;
	ajax('MoreWalls_XD', 'req=morewalls&cid=' + messanger.cid + '&lastpw=' + lastpw)
}

function MoreWalls_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		var wallbutton = document.getElementById('morewalls');
		wallbutton.parentNode.removeChild(wallbutton);		
		document.getElementById('thewall').innerHTML += output.substring(1);
	}
}

function ReqSuggest(type,value,flag, gender)
{
	if (!flag)
	{
		if (messanger['sugtimer'] != null) clearTimeout(messanger['sugtimer']);
		messanger['sugtimer'] = setTimeout(function() { ReqSuggest(type, value, true, gender) }, 300)
		return;
	}
	if (value.length < 2) document.getElementById('rsbox').innerHTML = '';
	else ajax('ReqSuggest_XD', 'req=reqsuggest&type=' + encodeURI(type) + '&value=' + encodeURI(value) + '&flag=' + flag + '&gender=' + gender);
}

function ReqSuggest_XD(output)
{
	document.getElementById('rsbox').innerHTML = output;
}

function GetTopUploaders(value)
{
	ajax('GetTopUploaders_XD', 'req=topuploaders&value=' + value);
}

function GetTopUploaders_XD(output)
{
	document.getElementById('tubox').innerHTML = output;
}

function Suggest(value, flag, gender)
{
	if (!flag)
	{
		if (messanger['sugtimer'] != null) clearTimeout(messanger['sugtimer']);
		messanger['sugtimer'] = setTimeout(function() { Suggest(value, true, gender) }, 300)
		return;
	}
	if (value == '') { Suggest_XD(''); }
	else { ajax('Suggest_XD', 'req=suggest&gender=' + gender + '&value=' + encodeURI(value)); }
}

function Suggest_XD(output)
{
	document.getElementById('suggestions').innerHTML = output;
	if (output == '') { document.getElementById('suggestions').style.visibility = 'hidden'; }
	else { document.getElementById('suggestions').style.visibility = 'visible'; }
}

function GetDivByClass(type)
{
	var allDivs = document.getElementsByTagName('div');
	for (var i in allDivs)
	{
		if (allDivs[i].className == "") {continue;}
		var arr = allElements[i].className.split(' ');
		for (var j in arr)
		{
			if (arr[j] == type)
			{
				// Do something..?
			};
		}
    };
}

function Tag()
{
	alert('Tagging system is getting a makeover. will be ready soon.');
	//getCSS('.pic').style.border = '2px solid #aaa';
	//getCSS('.pic:hover').style.border = '2px solid red';
}

function ReportMode(type)
{
	messanger.mode = 'reporting';
	getCSS('.pic').style.border = '2px solid #ddd';
	getCSS('.pic:hover').style.border = '2px solid red';
	getCSS('.reported').style.border = '2px solid #c44';
	for (var pid in messanger.pidlist) 
	{ 
		document.getElementById('link' + messanger.pidlist[pid]).target = "_self";
		document.getElementById('link' + messanger.pidlist[pid]).href = "javascript:Action(" + messanger.pidlist[pid] + ",'" + type + "')"; 
	}
}

function Action(pid, type)
{
	alert("actioned " + pid);
	if (messanger.mode == 'reporting')
	{
		if (document.getElementById('rep' + pid).style.display == 'block') { alert('You cannot report an already reported picture'); return; }
	}
}

function getCSS(name)
{
	var rules = document.styleSheets[0].cssRules? document.styleSheets[0].cssRules: document.styleSheets[0].rules;
	for (var i in rules)
	{
		if (rules[i].selectorText == name) { return rules[i]; }
	}
}

function pExpand(pid, skip)
{
	var esign = '+';
	if (messanger['mbf'] == '1') esign = '&ratio;';
	
	if (document.getElementById('extra' + pid).style.display == 'none')
	{
		if (messanger.lastexpand != null) 
		{ 
			document.getElementById('exbtn' + messanger.lastexpand).innerHTML = esign;			
			document.getElementById('extra' + messanger.lastexpand).style.display = 'none';
			if (document.getElementById('econt' + messanger.lastexpand) != null) document.getElementById('econt' + messanger.lastexpand).className = 'extra';
		}
		messanger.lastexpand = pid;
		document.getElementById('exbtn' + pid).innerHTML = '-';
		document.getElementById('extra' + pid).innerHTML = 'loading...';
		document.getElementById('extra' + pid).style.display = 'block';
		if (document.getElementById('econt' + pid) != null) document.getElementById('econt' + pid).className = 'extra eopen';
		if (skip != 1) ajax('pExpand_XD', 'req=pexpand&pid=' + pid);
	}
	else
	{		
		document.getElementById('exbtn' + pid).innerHTML = esign;
		document.getElementById('extra' + pid).style.display = 'none';
		if (document.getElementById('econt' + pid) != null) document.getElementById('econt' + pid).className = 'extra';
	}
}

function pRefreshTag(pid, newtag)
{
	var pd = GetPD(pid);
	if (newtag != null) pd.tags = newtag;

	var tags = new Object();
	for (var t in pd.tags) tags[pd.tags[t]] = true;
	
	while (pd.tdiv.hasChildNodes()) { pd.tdiv.removeChild(pd.tdiv.lastChild); }
	var alltags = Object.keys(messanger['tagname']).sort();
	
	for (var key of alltags)
	{
		if (tags[key])
		{
			var singletag = document.createElement('div');
			singletag.appendChild(document.createTextNode(key));
			pd.tdiv.appendChild(singletag);
		}
	}
}

function pTravel(e)
{
	e = e || window.event;
	
	var margin = 50; // precent!
	
	var target = e.target || e.srcElement,
    rect = target.getBoundingClientRect(),
    offsetX = e.clientX - rect.left;
    offsetY = e.clientY - rect.top;
    
    var x = (offsetX * (100 + 2 * margin) / rect.width) - margin;
    var y = (offsetY * (100 + 2 * margin) / rect.height) - margin;
    if (x < 0) x = 0;
    else if (x > 100) x = 100;
    if (y < 0) y = 0;
    else if (y > 100) y = 100;
    
	e.target.style.backgroundPosition = x + '% ' + y + '%';
}

function pTapTouch(e)
{
	e = e || window.event;			
	var target = e.target || e.srcElement;
	target.style.transition = 'all 0s ease 0s';	
	target.focus();
    rect = target.getBoundingClientRect();
    var t = e.changedTouches[0];
    offsetX = t.clientX - rect.left;
    offsetY = t.clientY - rect.top;
    
    messanger['tpos'] = new Array(offsetX, offsetY);
}

function pTravelTouch(e, ratio)
{
	if (ratio == 1 || messanger['tpos'] == null) return;
	
	e = e || window.event;			
	var target = e.target || e.srcElement;
	rect = target.getBoundingClientRect();
    var t = e.changedTouches[0];
    offsetX = t.clientX - rect.left;
    offsetY = t.clientY - rect.top;
    
    if (true || getCookie('developer') == 'true')
    {
	    var bgp = new Array(0, 0);
	    var asize;
	    var cover = (getCookie('tcover') == 'true');
	    
	    if (ratio > 1 && !cover) // Landscape, and cover is false.
	    {
		    asize = rect.width / ratio;
		    bgp[1] = (rect.height - asize) / 2 + offsetY - messanger['tpos'][1];
		    if (Math.abs(offsetY - messanger['tpos'][1]) < Math.abs(offsetX - messanger['tpos'][0]))
		    {
			    messanger['tpos'] = null;
			}
		    else if (bgp[1] > rect.height - asize)
		    {
			    bgp[1] = rect.height - asize;
			    messanger['tpos'] = null;
			}
			else if (bgp[1] < 0)
			{
				bgp[1] = 0;
				messanger['tpos'] = null;
			}
			else
			{
				//e.preventDefault();
			}
		}
		else if (ratio < 1 && cover) // Landscape, and cover is true.
	    {
		    asize = rect.width / ratio;
		    bgp[1] = rect.height - asize + offsetY - messanger['tpos'][1];
		    if (Math.abs(offsetY - messanger['tpos'][1]) < Math.abs(offsetX - messanger['tpos'][0]))
		    {
			    messanger['tpos'] = null;
			}
		    else if (bgp[1] < rect.height - asize)
		    {
			    bgp[1] = rect.height - asize;
			    messanger['tpos'] = null;
			}
			else if (bgp[1] > 0)
			{
				bgp[1] = 0;
				messanger['tpos'] = null;
			}
			else
			{
				//e.preventDefault();
			}
		}
		else if (ratio < 1 && !cover) // Landscape, and cover is false.
	    {
		    asize = rect.height * ratio;
		    bgp[0] = (rect.width - asize) / 2 + offsetX - messanger['tpos'][0];
		    if (Math.abs(offsetY - messanger['tpos'][1]) > Math.abs(offsetX - messanger['tpos'][0]))
		    {
			    messanger['tpos'] = null;
			}
		    else if (bgp[0] > rect.width - asize)
		    {
			    bgp[0] = rect.width - asize;
			    messanger['tpos'] = null;
			}
			else if (bgp[0] < 0)
			{
				bgp[0] = 0;
				messanger['tpos'] = null;
			}
			else
			{
				//e.preventDefault();
			}
		}
		else if (ratio > 1 && cover) // Landscape, and cover is true.
	    {
		    asize = rect.height * ratio;
		    bgp[0] = (rect.width - asize) / 2 + offsetX - messanger['tpos'][0];
		    if (Math.abs(offsetY - messanger['tpos'][1]) > Math.abs(offsetX - messanger['tpos'][0]))
		    {
			    messanger['tpos'] = null;
			}
		    else if (bgp[0] < rect.width - asize)
		    {
			    bgp[0] = rect.width - asize;
			    messanger['tpos'] = null;
			}
			else if (bgp[0] > 0)
			{
				bgp[0] = 0;
				messanger['tpos'] = null;
			}
			else
			{
				//e.preventDefault();
			}
		}
	    
	    target.style.backgroundPosition = bgp[0] + 'px ' + bgp[1] + 'px';
	}
}



function pTraveled(e)
{
	e = e || window.event;			
	var target = e.target || e.srcElement;
	target.style.backgroundPosition = '';
	target.style.transition = 'background-position 150ms ease-out';
}

function pDisplayNew(gitem)
{
		var obj = messanger.gdata[gitem];
		var img = document.createElement('div');
		img.className = 'thumb';
		img.style.backgroundImage = "url('https://thumbs.wikifeet.com/" + obj.pid + ".jpg')";
		img.onmousemove = function(e) { return pTravel(e); }
		img.onmouseout = function(e) { return pTraveled(e); }
		img.addEventListener('touchstart', function(e) { pTapTouch(e); });
		img.addEventListener('touchmove', function(e) { return pTravelTouch(e, parseInt(obj.pw)/parseInt(obj.ph)); });
		img.addEventListener('touchend', function(e) { pTraveled(e); });
		
		if (obj.removed == 1) img.style.opacity = 0.3;
		obj.pdiv = img;
		
		var anc = document.createElement('a');
		anc.href = 'https://pics.wikifeet.com/' + messanger.cfname + '-Feet-' + obj.pid + '.jpg';
		anc.target = '_blank';
		anc.onclick = function(e) { return SlideByPid(e, obj.pid); }
		anc.appendChild(img);
		
		var container = document.createElement('div');
		container.className = 'pic';
		container.appendChild(anc);
		
		if (obj.new == 1)
		{
			var newdiv = document.createElement('div');
			newdiv.className = 'new';
			newdiv.innerHTML = 'new';
			container.appendChild(newdiv);
		}
		
		
		var piddiv = document.createElement('div');
		piddiv.className = 'pid';
		piddiv.innerHTML = ' ' + obj.pid + ' ';
		container.appendChild(piddiv);
		
		var resdiv = document.createElement('div');
		resdiv.className = 'reslabel';
		resdiv.innerHTML = obj.pw + ' x ' + obj.ph;
		container.appendChild(resdiv);
		
		
		if (messanger['tagname'] != null)
		{
			var tdiv = document.createElement('div');
			tdiv.className = 'taglabel';
			container.appendChild(tdiv);
			obj['tdiv'] = tdiv;
			pRefreshTag(obj.pid);
		}		
		
		var ftr = document.createElement('div');
		ftr.className = 'picftr';
		container.appendChild(ftr);
		
		if (obj.gid && crdata[obj.gid])
		{
			var crdiv = document.createElement('div');
			crdiv.className = 'crdiv';
			crdiv.innerHTML = '&copy; ' + crdata[obj.gid].name;
			var cra = document.createElement('a');
			cra.style.cursor = 'alias';
			cra.target = '_blank';
			if ('href' in cra) cra.href = crdata[obj.gid].url;
			ftr.appendChild(cra);
			cra.appendChild(crdiv);
			ftr.appendChild(document.createElement('br'));
		}
		
		var rep = document.createElement('div');
		rep.className = 'reported';
		rep.id = 'rep' + obj.pid;
		var rdisplayed = obj.reported;
		if (obj.ureported != null) rdisplayed = obj.ureported;
		if (rdisplayed == '0') rep.style.display = 'none';
		else
		{
			rep.innerHTML = 'Reported: ' + repnames[rdisplayed];
			if (obj.ureported == null) rep.innerHTML += "<br><BUTTON onclick=\"pDoReport(" + obj.pid + ", '0', 1)\">NO</BUTTON> report justified? <BUTTON onclick=\"pDoReport(" + obj.pid + ", '" + rdisplayed + "', 1)\">YES</BUTTON>";
		}
		ftr.appendChild(rep);
		
		var extra = document.createElement('div');
		extra.className = 'extra';
		extra.id = 'econt' + obj.pid;
		var plus = document.createElement('div');
		plus.innerHTML = '&ratio;';
		plus.className = 'plus';
		plus.id = 'exbtn' + obj.pid;
		container.appendChild(extra);
		extra.appendChild(plus);
		
		var ptext = document.createElement('div');
		ptext.id = 'extra' + obj.pid;
		ptext.className = 'ptext';
		ptext.style.display = 'none';
		extra.appendChild(ptext);

		plus.onclick = function(passobj) { return function() { pExpand(passobj); }}(obj.pid);
		//extra.onmouseenter = function(passobj) { return function() { pExpand(passobj); }}(obj.pid);
		//extra.onmouseleave = function() { pExpand(); }
		
		return container;
}


function pDisplay(gitem)
{
		if (messanger['mbf'] == '1') return pDisplayNew(gitem);
		
		var obj = messanger.gdata[gitem];
		var img = document.createElement('div');
		img.className = 'thumb';
		img.style.backgroundImage = "url('https://thumbs.wikifeet.com/" + obj.pid + ".jpg')";
		if (obj['new'] == 1) img.innerHTML = "<img src='/images/new.gif' style='position:absolute; top:0px; left:0px; width:32px'>";
		
		var anc = document.createElement('a');
		anc.href = 'https://pics.wikifeet.com/' + messanger.cfname + '-Feet-' + obj.pid + '.jpg';
		anc.target = '_blank';
		anc.onclick = function(e) { return SlideShow(e, gitem); }
		anc.appendChild(img);
		
		var head = document.createElement('div');
		head.className = 'phead';
		
		if (messanger['tagname'] != null)
		{
			var tdiv = document.createElement('div');
			tdiv.className = 'taglabel';
			obj['tdiv'] = tdiv;
			pRefreshTag(obj.pid);
		}
		
		var psize = document.createElement('div');
		//psize.style.cssFloat = 'right';
		psize.style.position = 'absolute';
		//psize.style.top = '1px';
		psize.style.right = '5px';
		psize.innerHTML = obj.pw + ' x ' + obj.ph;
		//var pid = document.createElement('span');
		//pid.innerHTML = 'id. ' + obj.pid;
		head.appendChild(psize);
		//head.appendChild(pid);
		head.innerHTML += 'id. ' + obj.pid;
		
		var div = document.createElement('div');
		div.className = 'pic';
		div.style.position = 'relative';
		if (obj.removed == 1) div.style.opacity = 0.3;
		
		div.appendChild(head);
		div.appendChild(anc);
		div.appendChild(tdiv);
		
		var footer = document.createElement('div');
		footer.style.position = 'absolute';
		footer.style.textAlign = 'left';
		footer.style.bottom = '1px';
		footer.style.left = '1px';
		footer.style.width = '100%';
		footer.innerHTML = "<div id=exbtn" + obj.pid + " style='border:1px solid black; margin:0px; float:right; background:#468; color:white; padding:1px 4px 1px 4px; cursor:pointer; font-weight:bold; font-size:7pt' onclick=pExpand(" + obj.pid + ")>+</div>";
		footer.innerHTML += "<div id=extra" + obj.pid + " style='background:black; padding:10px; color:white; font-size:8pt; border:1px solid #468; opacity:0.85; filter:alpha(opacity=85); display:none; clear:both'></div>";
		
		var rep = document.createElement('div');
		rep.id = 'rep' + obj.pid;
		rep.style.background = 'red';
		rep.style.fontWeight = 'bold';
		rep.style.fontSize = '7pt';
		rep.style.textAlign = 'center';
		rep.style.padding = '1px 0px';
		rep.style.borderTop = '1px solid black';
		rep.style.clear = 'both';
		
		var rdisplayed = obj.reported;
		if (obj.ureported != null) rdisplayed = obj.ureported;
		
		if (rdisplayed == '0') rep.style.display = 'none';
		else
		{
			rep.innerHTML = 'Reported: ' + repnames[rdisplayed];
			if (obj.ureported == null) rep.innerHTML += "<br>Is it justified? &nbsp; <a style='color:white' href=\"javascript:pDoReport(" + obj.pid + ", '" + rdisplayed + "', 1)\">YES</a> &nbsp; <a style='color:white' href=\"javascript:pDoReport(" + obj.pid + ", '0', 1)\">NO</a></small>";
		}
		footer.appendChild(rep);
		
		div.appendChild(footer);		
		return div;	
}

function pDisplayAll(data) // Obsolete
{	
	messanger['gdata'] = JSON.parse(data);
	for (var i in messanger['gdata'])
	{
		messanger.pexist[messanger['gdata'][i].pid] = 1;
		if (messanger['gdata'].reported != '0' && !messanger['gdata'].removed) numreported++;
	}
	
	pDisplayPage(0);
}

function pSkipPage(pagenum)
{
	var page;
	if (document.getElementById('gdataskip') != null) page = document.getElementById('gdataskip').value;
	if (pagenum != null) page = pagenum;
	if (isNaN(page))
	{
		alert('Page number must be a number');
		document.getElementById('gdataskip').focus();
		return;
	}
	if (page <= 0)
	{
		alert('Not a valid page number');
		document.getElementById('gdataskip').focus();
		return;
	}
	if (page > 1 && page > Math.ceil(messanger.gdata.length / 100))
	{
		alert('Page number too high, there are only ' + Math.ceil(messanger.gdata.length / 100) + ' Pages in this gallery');
		if (document.getElementById('gdataskip') != null) document.getElementById('gdataskip').focus();
		return;
	}
	page--;
	pDisplayPage(page, null);
}

function pDisplayPage(page, first)
{
	var gallery = document.getElementById('thepics');
	messanger['lastexpand'] = null;
	
	if (getCookie('tcover') == 'true')
	{
		if (document.getElementById('tcover_cb') != null) document.getElementById('tcover_cb').checked = true;
		Thumbs('background-size', true);
	}
	if (getCookie('reslabel') == 'true')
	{
		if (document.getElementById('reslabel_cb') != null) document.getElementById('reslabel_cb').checked = true;
		Thumbs('res-label', true);
	}
	if (getCookie('taglabel') == 'true')
	{
		if (document.getElementById('taglabel_cb') != null) document.getElementById('taglabel_cb').checked = true;
		Thumbs('tag-label', true);
	}
	if (getCookie('hidepid') == 'true')
	{
		if (document.getElementById('pidlabel_cb') != null) document.getElementById('reslabel_cb').checked = false;
		Thumbs('pid-label', false);
	}

	
	if (first != 1) while (gallery.firstChild) { gallery.removeChild(gallery.firstChild); }
	
	//Filtering:
	var allfilters = new Array();
	var flt = false;

	var additive = document.getElementById('add_filters').checked;
	if (messanger['filtered'] == null) messanger['filtered'] = new Array();
	if (messanger['filters'] == null) messanger['filters'] = new Object();
	allfilters = new Array();
	var thisfilter = false;
	var matched = false;
	
	for (var j in messanger['tagname'])
	{
		thisfilter = document.getElementById('taglabel' + j).checked;
		if (messanger.filters[j] == null) messanger.filters[j] = false;
		if (messanger.filters[j] != thisfilter) flt = true;			
		if (thisfilter) allfilters.push(j);
		messanger.filters[j] = thisfilter;
	}
	if (messanger.filters['add'] == null) messanger.filters['add'] = false;
	if (messanger.filters['add'] != additive) flt = true;
	messanger.filters['add'] = additive;
	
	if (allfilters.length > 0 && flt)
	{
		messanger['filtered'] = messanger['gdata'].concat(messanger['filtered']);
		messanger['gdata'] = new Array();
		for (var i=messanger['filtered'].length - 1; i>=0; i--)
		{
			matched = !additive;
			for (var j in allfilters)
			{
				if ((messanger['filtered'][i].tags.match(allfilters[j]) == null && !additive) || (messanger['filtered'][i].tags.match(allfilters[j]) != null && additive)) matched = additive;
			}
			if (matched) messanger['gdata'].push(messanger['filtered'].splice(i,1)[0]);
		}
	}
	else if (flt)
	{
		messanger['gdata'] = messanger['gdata'].concat(messanger['filtered']);
		messanger['filtered'] = new Array();
	}
		

	if (document.getElementById('gdatasort') != null || flt)
	{
		if (messanger['lastsort'] != document.getElementById('gdatasort').value || messanger['lastsimmed'] != document.getElementById('groupsimilar').checked || flt )
		{
			if (document.getElementById('gdatasort').value == 'rez') messanger.gdata.sort(function(a,b) { return (b.pw * b.ph) - (a.pw * a.ph) } );
			else if (document.getElementById('gdatasort').value == 'rep') messanger.gdata.sort(function(a,b) { return b.reported.charCodeAt(0) - a.reported.charCodeAt(0) } );
			else messanger.gdata.sort(function(a,b) { return b.pid - a.pid } );
			messanger['lastsort'] = document.getElementById('gdatasort').value;
		}
		if (messanger['lastsimmed'] != document.getElementById('groupsimilar').checked || messanger['threshold'] != document.getElementById('sthreshold').value)
		{
			if (document.getElementById('groupsimilar').checked) pDisplaySimilar();
			messanger['lastsimmed'] = document.getElementById('groupsimilar').checked;
			messanger['threshold'] = document.getElementById('sthreshold').value;
		}
	}
	
	var last = page * 100 + 100;
	if (last > messanger.gdata.length) last = messanger.gdata.length;
	for (var i=page * 100; i < last; i++)
	{
		if (i >= messanger.gdata.length) break;
		gallery.appendChild(pDisplay(i));
	}
	
	var gpager = document.createElement('table');
	var tr = gpager.insertRow(0);
	var prev = tr.insertCell(0);
	var current = tr.insertCell(1)
	var next = tr.insertCell(2);
	
	var nextcount = messanger.gdata.length - (page + 1) * 100;
	if (nextcount > 100) nextcount = 100;
	
	if (page > 0) prev.innerHTML = "<button onclick='pDisplayPage(" + (page-1) + ")'>&lt;&lt; Prev 100 pics</button>";
	else if (last < messanger.gdata.length) prev.innerHTML = "Page: <INPUT id=gdataskip type=text style='width:20px'> <button onclick='pSkipPage()'>Skip</button>";
	if (messanger.gdata.length > 100) current.innerHTML = 'Displaying Page ' + (page+1) + ' (pictures ' + (page * 100 + 1) + ' - ' + last + ', out of ' + messanger.gdata.length + ').';
	else current.innerHTML = 'Total photos in gallery: ' + messanger.gdata.length;
	if (last < messanger.gdata.length) next.innerHTML = "<button onclick='pDisplayPage(" + (page+1) + ")'>Next " + nextcount + " pics >></button>";
	if (document.getElementById('gnumpages') != null)
	{
		document.getElementById('gnumpages').innerHTML = Math.ceil(messanger.gdata.length / 100);
		document.getElementById('gdatapage').value = page + 1;
	}
	
	prev.style.width = '125px';
	current.style.textAlign = 'center';
	next.style.textAlign = 'right';
	next.style.width = '125px';
	gpager.style.width = '100%';
	gpager.style.clear = 'both';
	
	gallery.appendChild(gpager);	
	if (first != 1) gallery.scrollIntoView();
}

function pDisplaySimilar()
{
	messanger.queue = new Object();
	var threshold = document.getElementById('sthreshold').value;
	
	for (var i=0; i<messanger.gdata.length; i++)
	{
		messanger.queue[messanger.gdata[i].pid] = new Object();
		messanger.queue[messanger.gdata[i].pid].sims = new Array();
	}
	
	for (var i=0; i<messanger.gdata.length; i++)
	{
		var pid = messanger.gdata[i].pid;
		messanger.queue[pid].used = 0;
		messanger.queue[pid].obj = messanger.gdata[i];
		if (messanger.gdata[i].similarity < threshold && messanger.gdata[i].closest != null && messanger.queue[messanger.gdata[i].closest] != null)
		{
			messanger.queue[pid].sims.push(messanger.gdata[i].closest);
			messanger.queue[messanger.gdata[i].closest].sims.push(pid);
		}
	}
	
	var tgdata = messanger.gdata;
	messanger.gdata = [];
	
	for (var i=0; i<tgdata.length; i++) pDisplayInc(tgdata[i].pid);
}

function pDisplayInc(pid)
{
	if (messanger.queue[pid].used == 0)
	{
		messanger.queue[pid].used = 1;
		messanger.gdata.push(messanger.queue[pid].obj);
		//alert('sims for ' + pid + ' is ' + messanger.queue[pid].sims);
		for (var i=0; i<messanger.queue[pid].sims.length; i++) pDisplayInc(messanger.queue[pid].sims[i]);
	}	
}

function pDisplaySimilarSlow()
{
	var wpos = 0;
	var rpos = 0;
	var queue = [];
	var threshold = document.getElementById('sthreshold').value;
	
	while (wpos < messanger.gdata.length)
	{
		if (rpos == wpos) wpos++;
		alert('rpos: ' + rpos + ', wpos: ' + wpos);
		var pid = messanger.gdata[rpos].pid;
		if (messanger.gdata[rpos].similarity < threshold) queue.push(messanger.gdata[rpos].closest);
		alert('similarity is ' + messanger.gdata[rpos].similarity);
		var seek = wpos - 1;
		while (seek > -1)
		{
			alert('seeking starting at ' + seek);
			seek = messanger.gdata.map(function(e) { return e.closest; }).indexOf(pid, seek + 1);
			if (seek >= wpos) if (messanger.gdata[seek].similarity < threshold) queue.push(messanger.gdata[seek].pid);
		}
		
		alert(queue);
		while (queue.length > 0)
		{
			var item = queue.shift();
			seek = messanger.gdata.map(function(e) { return e.pid; }).indexOf(item);
			if (seek < wpos) continue;
			var temp = messanger.gdata[wpos];
			messanger.gdata[wpos] = messanger.gdata[seek];
			messanger.gdata[seek] = temp;
			wpos++;
			alert('written from queue');
		}
		rpos++;
	}
}


function pReport(pid)
{
	var thetext;
	thetext = "<div style='margin-bottom:3px; text-decoration:underline'>Report picture as:</div><div class=repoption>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'F')\">- Fake / Wrong person</div>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'I')\">- Illegal / Copyrighted</div>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'U')\">- Underage (under 17)</div>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'P')\">- Poor quality - please remove</div>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'D')\">- Duplicate (remove this copy)</div>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'A')\">- Adult Content</div>";
	thetext += "<div onclick=\"pDoReport(" + pid + ",'N')\">- No feet showing</div>";
	thetext += "</div><div style='text-align:right'><a style='color:white' href=javascript:pExpand(" + pid + ")>cancel</a></div>";
	document.getElementById('extra' + pid).innerHTML = thetext;
	
}

function pTag(pid)
{
	var pd = GetPD(pid);
	var tags = {};
	for (var t in pd.tags) tags[pd.tags[t]] = true;
		
	var extra = document.getElementById('extra' + pid);
	while (extra.firstChild) { extra.removeChild(extra.firstChild); }
		
	var div = document.createElement('div');
	div.style.marginBottom ='3px';
	div.style.textDecoration = 'underline';
	div.style.marginBottom = '10px';
	div.innerHTML = 'Picture tags:';
	extra.appendChild(div);
	
	div = document.createElement('div');
	//div.className = 'repoption';
	var sel = document.createElement('select');
	var opt = document.createElement('option');
	opt.innerHTML = 'Add Tag...';
	sel.style.marginTop = '10px';
	sel.appendChild(opt);
	sel.setAttribute('onchange',"pDoTag(" + pid + ",1,this.value)");
	
	var dv;
	var rem;
	var tcount = 0;
	
	var sorted = {};
	var keys = [];
    for (var key in messanger['tagname']) {
      if (messanger['tagname'].hasOwnProperty(key)) {
        keys.push(key);
      }
    }
	keys.sort();
	
	for (var i in keys) sorted[keys[i]] = messanger['tagname'][keys[i]];
    
	for (var key in sorted)
	{
		if (tags[key])
		{
			dv = document.createElement('div');
			dv.innerHTML = '&nbsp; ' + messanger['tagname'][key];
			rem = document.createElement('span');
			rem.innerHTML = 'x';
			rem.style.cursor = 'pointer';
			rem.style.textDecoration = 'underline';
			rem.setAttribute('onclick', "pDoTag(" + pid + ",0,'" + key + "')");
			dv.insertBefore(rem, dv.firstChild);
			div.appendChild(dv);
			tcount++;
		}
		else
		{
			opt = document.createElement('option');
			opt.innerHTML = messanger['tagname'][key];
			opt.value = key;
			sel.appendChild(opt)
		}
	}
	if (tcount == 0)
	{
		dv = document.createElement('div');
		dv.innerHTML = 'No tags applied';
		div.appendChild(dv);
	}
	
	extra.appendChild(div);
	extra.appendChild(sel);
	
	div = document.createElement('div');
	div.style.textAlign = 'right';
	var alink = document.createElement('a');
	alink.innerHTML = 'close';
	alink.style.color = 'white';
	alink.href = "javascript:pExpand(" + pid + ")";
	div.appendChild(alink);
	extra.appendChild(div);
	
}

function pDoTag(pid, flag, val)
{
	ajax('pDoTag_XD', 'req=ptag&pid=' + pid + '&type=' + val + flag);
}

function pDoTag_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		var arr = output.substring(1).split(',');
		pRefreshTag(arr[0], arr[1]);
		pTag(arr[0]);
	}
}


function pDoReport(pid, type, just, sure)
{
	if (just == null) pExpand(pid);
	if (sure == null) sure = 0;
	ajax('pDoReport_XD', 'req=preport&pid=' + pid + '&type=' + type + '&sure=' + sure);
}


function pDoReport_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else if (output.substring(0, 1)=='W')
	{
		var data = output.substring(1).split('|');
		pExpand(data[0], 1);
		pExpand_XD(output);
	}
    else
    {
		var data = output.substring(1).split('|');
		if (data[1] == '0') 
		{
			document.getElementById('rep' + data[0]).style.display = 'none';
			document.getElementById('rep' + data[0]).innerHTML = '';
		}
		else 
		{
			document.getElementById('rep' + data[0]).style.display = 'block';
			document.getElementById('rep' + data[0]).innerHTML = data[1];
		}
	}
}

function pExpand_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		var data = output.substring(1).split('|');
		//document.getElementById('exbtn' + data[0]).innerHTML = '-';
		//document.getElementById('extra' + data[0]).style.display = 'block';
		document.getElementById('extra' + data[0]).innerHTML = data[1];
	}
}


function RankOut()
{
	RankChange(messanger.originalRank);
}

function MakeFavNew(cid, b)
{
	if (messanger.userid == 0) { alert('not logged in.'); return; }
	var opp = messanger.fav[cid];
	if (opp == 0) { opp = 1; } else { opp = 0; } // Opposite day? ;)
	ajaxpass('MakeFavNew_XD', b, 'req=makefav&cid=' + cid + '&value=' + opp);
}

function MakeFavNew_XD(b, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		var data = output.substring(1).split(',');
		messanger.fav[data[0]] = data[1];
		b.setAttributeNS(null, "class", 'celeb-fav' + data[1]);
		if (data[1] == 1) { b.childNodes[0].innerHTML =  'Remove from favorites'; } 
		else { b.childNodes[0].innerHTML = 'Add to favorites'; }
	};
}

function MakeFav(cid)
{
	if (messanger.userid == 0) { alert('not logged in.'); return; }
	var opp = messanger.fav[cid];
	if (opp == 0) { opp = 1; } else { opp = 0; } // Opposite day? ;)
	ajax('MakeFav_XD', 'req=makefav&cid=' + cid + '&value=' + opp);

}

function MakeFav_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		var data = output.substring(1).split(',');
		messanger.fav[data[0]] = data[1];
		document.getElementById('fav' + data[0]).src = 'images/fav' + data[1] + '.gif';
		if (data[1] == 1) { document.getElementById('fav' + data[0]).title = 'Remove from favorites'; } 
		else { document.getElementById('fav' + data[0]).title = 'Add to favorites'; }
	};
}

function MWFSub(button)
{
	button.disabled = true;
	
	ajax('NLSub_X', 'req=mwfsub&email=' + encodeURIComponent(document.getElementById('mwfsub').value));
	document.getElementById('mwfstatus').innerHTML = 'Thank you!';
}


function NLSub(button)
{
	var date = new Date(); 
	date.setTime(date.getTime()+(30*24*60*60*1000));
	document.cookie='newsletter=1; expires=' + date.toGMTString() + '; path=/';
	
	button.disabled = true;
	
	ajax('NLSub_X', 'req=newsletter&email=' + encodeURIComponent(document.getElementById('nlsub').value));
	document.getElementById('nlstatus').innerHTML = 'Thank you!';
}

function NLSub_X(output) {}


function FavSelected(that, sort)
{
	if (messanger.userid == 0) { alert('You need to login in order to access your favorites list.'); that.value=0; return; }
	if (that.value == 1) { parent.location='/celebs?sort=' + sort + '&fav=1'; }
	else { parent.location='/celebs?sort=' + sort; }
}

function Populate(obj)
{
	var target = document.getElementById(obj['divid']);
	var divbox, label, ah, i, j, f, splt, svg, usediv;
	for (i in obj['items'])
	{

		divbox = document.createElement('div');
		divbox.className = obj['class'];
		label = document.createElement('div');
		if (obj['items'][i][1] != null)
		{
			ah = document.createElement('a');
			ah.href = '/' + obj['items'][i][1];
			ah.innerHTML = obj['items'][i][2];
			label.appendChild(ah);
		}
		else
		{
			label.innerHTML = obj['items'][i][2];
		}
		divbox.appendChild(label);
		f = new Object();
		splt = obj['items'][i][3].split(",");
		for (j in splt)
		{
			f[splt[j]] = 1;
		}
		obj['items'][i][3] = f;
		obj['items'][i][4] = new Object();
		obj['items'][i][5] = divbox;
		for (j in obj['map'])
		{
			svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
			usediv = document.createElementNS("http://www.w3.org/2000/svg", "use");
			if (f[obj['map'][j]['val']] == null) f[obj['map'][j]['val']] = 0;
			usediv.setAttributeNS(null, "class", 'svg-' + obj['map'][j]['name'] + f[obj['map'][j]['val']]);
			usediv.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '#' + obj['map'][j]['name']);
			svg.appendChild(usediv);
			divbox.appendChild(svg);
			obj['items'][i][4][obj['map'][j]['name']] = usediv;
			//usediv.setAttributeNS('http://www.w3.org/1999/xlink', 'href', '#' + obj['map'][j]['name']);
			usediv.onclick = function(passobj) { return function() { PopuClick(passobj); }}({obj:obj, i:i, j:j});			
		}
		target.appendChild(divbox);
	}
	
	if (messanger['ptables'] == null) messanger['ptables'] = new Object();
	messanger['ptables'][obj['divid']] = obj;
}

function PopuClick(v)
{
	
	var conf = v['obj']['map'][v['j']]['warn' + v['obj']['items'][v['i']][3][v.obj.map[v.j].val]];
	if (conf && (confirm(conf) == false)) return;
	
	ajaxpass('PopuClick_XD', v, 'req=popuclick&category=' + v['obj']['divid'] + '&type=' + v['obj']['map'][v['j']]['name'] + '&pid=' + v['obj']['items'][v['i']][0] + '&value=' + v['obj']['items'][v['i']][3][v.obj.map[v.j].val]);
}

function PopuClick_XD(v, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else if (output.substring(0,1)=='2')
	{
		for (var i in v.obj.map)
		{
			var stat = 0;
			if (i == v.j) stat = 1;
			v.obj.items[v.i][3][v.obj.map[i].val] = stat;
			v.obj.items[v.i][4][v.obj.map[i].name].setAttributeNS(null, "class", 'svg-' + v.obj.map[v.j].name + stat);
		}
	}
    else
    {
		v['obj']['items'][v['i']][3][v.obj.map[v.j].val] = output.substring(1);
		v['obj']['items'][v['i']][4][v.obj.map[v.j].name].setAttributeNS(null, "class", 'svg-' + v.obj.map[v.j].name + v['obj']['items'][v['i']][3][v.obj.map[v.j].val]);
	};
}

function PopuSearch(v, divid)
{
	var target = document.getElementById(divid);
	var items = messanger['ptables'][divid]['items'];
	while (target.hasChildNodes()) {
    target.removeChild(target.lastChild); }
	
	for (var i in items)
	{
		if (items[i][2].toLowerCase().search(v.value.toLowerCase()) >= 0) target.appendChild(items[i][5]);
	}
}

function PopuFilter(divid, b)
{
	var bid = b.getAttribute('data-id');
	var target = document.getElementById(divid);
	var items = messanger['ptables'][divid]['items'];
	var v = messanger['ptables'][divid];
	while (target.hasChildNodes()) {
    target.removeChild(target.lastChild); }
    
    var fval = null;
    for (var j in v.map)
    {
	    if (v.map[j].name == bid) fval = v.map[j].val;
	}
	if (fval == null) return;
	
	var unfilter = 0
	if (v.filtered == bid)
	{
		unfilter = 1;
		v.filtered = null;
	}
	else v.filtered = bid;
	
    for (var i=0; i<items.length; i++)
	{
		if (unfilter || items[i][3][fval] == 1) target.appendChild(items[i][5]);
	}
	
	var parent = b.parentNode.parentNode;
	for (var j in parent.childNodes)
	{
		if (j < 2) continue;
		if (parent.childNodes[j].firstChild == null) continue;
		var cbid = parent.childNodes[j].firstChild.getAttribute('data-id');
		var flag = 0;
		if (v.filtered && cbid == bid) flag = 1;
		parent.childNodes[j].firstChild.setAttributeNS(null, "class", 'svg-' + cbid + flag);
	}
}


function ProfileS1()
{
	document.getElementById('acc_databox').style.display = 'none';
	document.getElementById('profileform').style.display = 'inline-block';
}

function ProfileS2()
{
	messanger['profiling'] = true;
	document.getElementById('profileform').submit();
	document.getElementById('acc_databox').innerHTML = '<br><big>Your profile picture is being uploaded.</big>';
	document.getElementById('profileform').style.display = 'none';
	document.getElementById('acc_databox').style.display = 'inline-block';
}

function ProfileS3()
{
	if (messanger['profiling'] != true) return;
	var result = (document.getElementById('thehiddenone').contentWindow || document.getElementById('thehiddenone').contentDocument);
	if (result.document) result = result.document;
	var output = result.body.innerHTML;	
	messanger['profiling'] = false;
	if (output.substring(0,1)=='0')
	{
		document.getElementById('acc_databox').innerHTML = "Error: " + output.substring(1);
	}
    else
    {
		document.getElementById('acc_databox').innerHTML = "Your new profile picture was uploaded successfully!";
		document.getElementById('profilepic').src = 'https://www.wikifeet.com/profiles/' + output.substring(1) + '.jpg?' + Math.random();		
	};
}

function ProfileS3N()
{
	if (messanger['profiling'] != true) return;
	var result = (document.getElementById('thehiddenone').contentWindow || document.getElementById('thehiddenone').contentDocument);
	if (result.document) result = result.document;
	var output = result.body.innerHTML;	
	messanger['profiling'] = false;
	if (output.substring(0,1)=='0')
	{
		document.getElementById('acc_databox').innerHTML = "Error: " + output.substring(1);
	}
    else
    {
		document.getElementById('acc_databox').innerHTML = "Your new profile picture was uploaded successfully!";
		document.getElementById('profilepic').style.backgroundImage = 'url(/profiles/' + output.substring(1) + '.jpg?' + Math.random() + ')';		
	};
}

function RepInfo()
{
	ajax('RepInfo_XD', 'req=repinfo&cid=' + messanger.cid);
	document.getElementById('repinfo').innerHTML = 'Loading info..';
}

function RepInfo_XD(output)
{
	document.getElementById('repinfo').innerHTML = output;
}

function Search()
{
	parent.location = '/search/' + document.getElementById('searchbar').value;
	return false;
}

function SignUp(theform)
{
	if (document.getElementById('su_username').value == '')
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Please enter your chosen username</span>";
		document.getElementById('su_username').focus();
	}
	else if (document.getElementById('su_username').value.match(/^[A-Z0-9]+$/i) == null)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Illegal username. Please use letters and numbers only.</span>";
		document.getElementById('su_username').focus();
	}
	else if (document.getElementById('su_username').value.length > 20)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Your chosen username is too long.</span>";
		document.getElementById('su_username').focus();
	}
	else if (document.getElementById('su_password').value == '')
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Please enter your chosen password</span>";
		document.getElementById('su_password').focus();
	}
	else if (document.getElementById('su_password').value.match(/^[A-Z0-9]+$/i) == null)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Illegal password. Please use letters and numbers only.</span>";
		document.getElementById('su_password').focus();
	}
	else if (document.getElementById('su_password').value.length > 16)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Your chosen password is too long</span>";
		document.getElementById('su_password').focus();
	}
	else if (document.getElementById('su_confirm').value == '')
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Please enter your password again</span>";
		document.getElementById('su_confirm').focus();
	}
	else if (document.getElementById('su_password').value != document.getElementById('su_confirm').value)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>The confirm password field must match the password field</span>";
		document.getElementById('su_confirm').focus();
	}
	else if (document.getElementById('su_nickname').value == '')
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Please enter your chosen nickname</span>";
		document.getElementById('su_nickname').focus();
	}
	else if (document.getElementById('su_nickname').value.length > 32)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Your chosen nickname is too long</span>";
		document.getElementById('su_nickname').focus();
	}
	else if (document.getElementById('su_email').value == '')
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Please enter your e-mail address</span>";
		document.getElementById('su_email').focus();
	}
	else if (document.getElementById('su_email').value.length > 64)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Your e-mail address exceeds the length limit (64 chars)</span>";
		document.getElementById('su_email').focus();
	}	
	else if (validateEmail(document.getElementById('su_email').value) == false)
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>Please enter a valid e-mail addresss</span>";
		document.getElementById('su_email').focus();
	}
	else
	{
		document.getElementById('su_button').disabled = true;
		messanger['signup'] = true;
		document.getElementById('su_message').innerHTML = "Sending form data...";
		return true;
	}
	return false;
}

function DoSignUp_XD()
{
	if (messanger['signup'] != true) return;
	var result = (document.getElementById('thehiddenone').contentWindow || document.getElementById('thehiddenone').contentDocument);
	if (result.document) result = result.document;
	var output = result.body.innerHTML;
	if (output.substring(0,1)=='0')
	{
		document.getElementById('su_message').innerHTML = "<span class=warn>" + output.substring(2) + "</span>";
		if (output.substring(1,2)=='1') document.getElementById('su_username').focus();
		else if (output.substring(1,2)=='2') document.getElementById('su_password').focus();
		else if (output.substring(1,2)=='3') document.getElementById('su_nickname').focus();
		else if (output.substring(1,2)=='4') document.getElementById('su_email').focus();
		document.getElementById('su_button').disabled = false;
	}
    else
    {
		document.getElementById('signupdiv').innerHTML = '<big>Thank you!</big><br>Your data has been saved. Once it is reviewed, an e-mail containing an activation code will be sent to your mailbox.<br>Review could take up to 48 hours, but usually takes much less.';
	};
}

function getCookie(c_name){
    var ret = document.cookie.match(new RegExp("(?:^|;)\\s*"+c_name+"=([^;]*)"));
    return (ret !== null ? ret[1] : null);
}

function SlideShowNew(e, gitem)
{
	if (getCookie('noslides') == 'true') return true;
	messanger.nohash = 1;
	
	var items = new Array();
	for (var i in messanger.gdata)
	{
		crlabel = '';
		if (messanger.gdata[i].gid && crdata[messanger.gdata[i].gid]) crlabel = " &nbsp; <a target=_blank style='color:#ffa' href='" + crdata[messanger.gdata[i].gid].url + "'>&copy; " + crdata[messanger.gdata[i].gid].name + "</a>";
		items.push({pid: messanger.gdata[i].pid, src: 'https://pics.wikifeet.com/' + messanger.cfname + '-Feet-' +  messanger.gdata[i].pid + '.jpg', msrc: 'https://thumbs.wikifeet.com/' +  messanger.gdata[i].pid + '.jpg', w: messanger.gdata[i].pw, h: messanger.gdata[i].ph, title: 'Picture ID. ' + messanger.gdata[i].pid + crlabel});
	}
	if (messanger['galleryend']) items.push(messanger['galleryend']);
	var options = { index: gitem, loop: false, clickToCloseNonZoomable: false, galleryPIDs: true, history:false };
	var pswpElement = document.getElementById('slidetest');
	var gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);
	messanger.pswp = gallery;
	gallery.listen('close', function() { 
		//messanger.gref = null;
		//history.back();
		history.replaceState({}, "", window.location.pathname);
	});
	//messanger.gref = gallery;
	gallery.listen('afterChange', function() {
			history.replaceState({}, "", "#&gid=1&pid=" + this.currItem.pid);
	});
	gallery.init();
	

	return false;
}


function SlideShow(e, gitem)
{
	if (messanger['mbf'] == '1')
	{
		return SlideShowNew(e, gitem);
	}

	e = e || window.event;
	if (document.body.clientWidth < 1024) return true;
	if (getCookie('noslides') == 'true') return true;
	var button = e.which || e.button;
	if (button != 1) return true;
	
	if (messanger['byg'] != null)
	{
		messanger['byg'].disable();
		messanger['byg'] = null;
	}
	
	DisplayOptions(false);
	var pid = messanger.gdata[gitem].pid;
	
	var black = document.createElement('div');
	black.style.top = '0px';
	black.style.left = '0px';
	black.style.height = '100%';
	black.style.width = '100%';
	black.style.position = 'fixed';
	black.style.backgroundColor = 'black';
	black.style.backgroundColor = "rgba(0,0,0,0.85)";
	black.style.zIndex = "2";
	document.body.appendChild(black);
	
	var pinfo = document.createElement('div');
	pinfo.style.bottom = '20px';
	pinfo.style.left = '10px';
	pinfo.style.color = 'white';
	pinfo.style.position = 'absolute';
	black.appendChild(pinfo);
	
	var exitbutton = document.createElement('img');
	exitbutton.src = '/images/sl_x.gif';
	exitbutton.style.top = '0px';
	exitbutton.style.right = '10px';
	exitbutton.style.padding = '10px';
	exitbutton.style.position = 'absolute';
	exitbutton.onclick = function() { SlideShow_Exit(black); }
	exitbutton.style.cursor = 'pointer';
	black.appendChild(exitbutton);
	
	var NSTER = document.createElement('div');
	//NSTER.id = "Nster963";
	NSTER.style.height = '600px';
	NSTER.style.width = '140px';
	NSTER.style.position = 'absolute';
	//NSTER.style.top = '50%';
	//NSTER.style.marginTop = '-300px';
	//NSTER.style.left = '10px';
	NSTER.style.right = '20px';
	NSTER.style.top = '50px';
	black.appendChild(NSTER);
	
	//var js = document.createElement('script');
	//js.src = 'http://js.nster.net/'+'00/09/'+'63.js';
	//js.type = 'text/javascript'; js.charset = 'UTF-8'; js.async = true;
	//var hh = document.getElementsByTagName('head')[0];
	//hh.appendChild(js);
	
	
	NSTER.innerHTML ="<IFRAME style='border:none; width:160px; height:600px; margin:0px' src='/sliderad.html'></IFRAME>";
	
	var imgdiv = document.createElement('div');
	imgdiv.style.top = '0px';
	imgdiv.style.height = '100%';
	imgdiv.style.left = '180px';
	imgdiv.style.right = '180px';
	imgdiv.style.textAlign = 'center';
	imgdiv.style.position = 'absolute';
	imgdiv.style.overflow = 'auto';
	imgdiv.onclick = function() { SlideShow_Zoom(imgdiv, messanger.gdata[gitem], 1); }
	black.appendChild(imgdiv);
	
	var arright = document.createElement('img');
	arright.src = '/images/sl_r.gif';
	arright.style.position = 'absolute';
	arright.style.top = '50%';
	arright.style.right = '180px';
	arright.style.padding = '10px';
	arright.style.cursor = 'pointer';
	arright.style.marginTop = '-34px';
	
	var arleft = document.createElement('img');
	arleft.src = '/images/sl_l.gif';
	arleft.style.position = 'absolute';
	arleft.style.top = '50%';
	arleft.style.left = '180px';
	arleft.style.padding = '10px';
	arleft.style.cursor = 'pointer';
	arleft.style.marginTop = '-34px';
	
	var preloader = document.createElement('div');
	preloader.style.width = '1px';
	preloader.style.height = '1px';
	preloader.style.display = 'hidden';
	black.appendChild(preloader);
	
	SlideShow_Next(gitem, imgdiv, arright, arleft, preloader, pinfo);
	
	black.appendChild(arright);
	black.appendChild(arleft);
	
	return false;
}

function GetPD(pid)
{
	for (var i in messanger.gdata) if (messanger.gdata[i].pid == pid) return messanger.gdata[i];

}

function SearchIn()
{
	var st = document.getElementById('searchtype');
	if (st.style.display == 'none')
		st.style.display = 'block';
		else st.style.display = 'none';
	return false;
}

function SlideByPid(e, pid)
{
	for (var i in messanger.gdata) if (messanger.gdata[i].pid == pid) return SlideShow(e, parseInt(i));
	return false;
}

function SlideShow_Next(gitem, imgdiv, arright, arleft, preloader, pinfo)
{
	SlideShow_Zoom(imgdiv, messanger.gdata[gitem], 0);
	
	arleft.onclick = function() { SlideShow_Next(gitem - 1, imgdiv, arright, arleft, preloader, pinfo); }
	arright.onclick = function() { SlideShow_Next(gitem + 1, imgdiv, arright, arleft, preloader, pinfo); }
	if (gitem <= 0) arleft.style.display = 'none'; else arleft.style.display = 'block';
	if (gitem >= messanger.gdata.length - 1) arright.style.display = 'none';
	else
	{
		arright.style.display = 'block';
		preloader.style.backgroundImage = "url('https://pics.wikifeet.com/" + messanger.cfname + "-Feet-" +  messanger.gdata[gitem + 1].pid + ".jpg')";
	}
	pinfo.innerHTML = "id. " + messanger.gdata[gitem].pid + "<br><div style=\"background-size:contain; background-position:center center; background-repeat:no-repeat; background-color:#333; width:140px; height:140px; background-image:url('https://thumbs.wikifeet.com/" + messanger.gdata[gitem].pid + ".jpg')\"></div>Pic " + (gitem + 1) + " of " + messanger.gdata.length;
	
	imgdiv.focus();
	document.onkeydown = function(e)
	{
		e = e || window.event;
	    if (e.keyCode == '37' && gitem > 0) { SlideShow_Next(gitem - 1, imgdiv, arright, arleft, preloader, pinfo); }
	    else if ((e.keyCode == '39' || e.keyCode == '32') && gitem < messanger.gdata.length - 1) { SlideShow_Next(gitem + 1, imgdiv, arright, arleft, preloader, pinfo); }
	};
	
	
}

function SlideShow_Zoom(imgdiv, obj, zoom)
{
	var scale = 0;
	var aspect = imgdiv.clientWidth / imgdiv.clientHeight;
	if (obj.pw / obj.ph > aspect) scale = imgdiv.clientWidth / obj.pw;
	else scale = imgdiv.clientHeight / obj.ph;
	
	if (zoom == 1)
	{
		imgdiv.backgroundImage = 'none';
		// anc.href = 'http://pics.wikifeet.com/' + messanger.cfname + '-Feet-' + obj.pid + '.jpg';
		
		imgdiv.innerHTML = "<img src='https://pics.wikifeet.com/" + messanger.cfname + "-Feet-" + obj.pid + ".jpg'>";
		imgdiv.style.cursor = 'pointer';
		imgdiv.style.cursor = '-moz-zoom-out';
		imgdiv.style.cursor = '-webkit-zoom-out';	
		imgdiv.style.cursor = 'zoom-out';
		imgdiv.style.marginTop = '0px';
		imgdiv.onclick = function() { SlideShow_Zoom(imgdiv, obj, 0); }

		var trueWidth = obj.pw * scale;
		var trueHeight = obj.ph * scale;
		var trueX = (event.clientX - 180 - (imgdiv.clientWidth - trueWidth) / 2) * obj.pw / trueWidth;
		var trueY = (event.clientY - (imgdiv.clientHeight - trueHeight) / 2) * obj.ph / trueHeight;
		
		imgdiv.scrollTop = trueY - imgdiv.clientHeight / 2;
		imgdiv.scrollLeft = trueX - imgdiv.clientWidth / 2;
	}
	else
	{
		imgdiv.innerHTML = "";
		var img = document.createElement('img');
		img.src = 'https://pics.wikifeet.com/' + messanger.cfname + '-Feet-' + obj.pid + '.jpg';
		imgdiv.appendChild(img);
		imgdiv.onclick = function() { SlideShow_Zoom(imgdiv, obj, 1); }
		
		var aspect = imgdiv.clientWidth / imgdiv.clientHeight;
		if (obj.pw / obj.ph > aspect)
		{
			scale = imgdiv.clientWidth / obj.pw;
			img.style.width = imgdiv.clientWidth + 'px';
			img.style.height = 'auto';
			img.style.marginTop = Math.floor((imgdiv.clientHeight - obj.ph * scale) / 2) + 'px';
		}
		else
		{
			scale = imgdiv.clientHeight / obj.ph;
			img.style.height = (imgdiv.clientHeight - 5) + 'px';
			img.style.width = 'auto';
		}
		
		if (scale > 1)
		{
			imgdiv.style.cursor = 'default';
			imgdiv.onclick = '';
		}
		else
		{
			imgdiv.style.cursor = 'pointer';
			imgdiv.style.cursor = '-moz-zoom-in';
			imgdiv.style.cursor = '-webkit-zoom-in';
			imgdiv.style.cursor = 'zoom-in';
			imgdiv.onclick = function() { SlideShow_Zoom(imgdiv, obj, 1); }
		}

	}
}

function SlideShow_Exit(black)
{
	//while (document.body.childNodes.length) document.body.removeChild(document.body.childNodes[0]);
	//while (messanger.newbody.childNodes.length) document.body.appendChild(messanger.newbody.childNodes[0]);
	//document.body.scrollTop = messanger.scrolltop;
	document.body.removeChild(black);
	document.onkeydown = '';
}

function Sort(sort, val, fav)
{
	if (val != '')
	{
		if (fav) parent.location = '/jumpto/' + val + '!';
		else parent.location = '/jumpto/' + val;
	}
	else
	{
		var data = new Object();
		if (sort != '') data['sort'] = sort;
		if (fav) data['fav'] = 1;
		if (fav || sort != '') parent.location = '/celebs?' + encodeQueryData(data);
		else parent.location = '/celebs';
	}
}

function encodeQueryData(data) {
   var ret = [];
   for (var d in data)
     ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));
   return ret.join('&');
}

function Teleport(gender, confirm)
{
	var cid = document.getElementById('c2teleport').value;
	ajax('Teleport_XD', 'req=teleport&cid=' + cid + '&gender=' + gender + '&confirm=' + confirm);
}

function Teleport_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		if (confirm("Are you sure you wish to teleport " + output.substring(1) + " to wikiFeet X realm?\nThis action is only reversible by Creator")) Teleport(1);
	};
}

function Thumbs(com, flag)
{
	var date = new Date(); 
	date.setTime(date.getTime()+(30*24*60*60*1000));
	var sts = document.styleSheets[0];
	if (com == 'background-size')
	{
		if (flag) sts.insertRule(".pic .thumb { background-size:cover; background-position:50% 100%; }", sts.cssRules.length);
		else sts.insertRule(".pic .thumb { background-size:contain; background-position:50% 50%; }", sts.cssRules.length);
		document.cookie='tcover=' + flag + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	}	
	else if (com == 'res-label')
	{
		if (flag) sts.insertRule(".reslabel { opacity: 1; }", sts.cssRules.length);
		else sts.insertRule(".reslabel { opacity: 0; }", sts.cssRules.length);
		document.cookie='reslabel=' + flag + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	}
	else if (com == 'tag-label')
	{
		if (flag) sts.insertRule(".taglabel { opacity: 1; }", sts.cssRules.length);
		else sts.insertRule(".taglabel { opacity: 0; }", sts.cssRules.length);
		document.cookie='taglabel=' + flag + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	}
	else if (com == 'pid-label')
	{
		if (flag) sts.insertRule(".pid { opacity: 1; }", sts.cssRules.length);
		else sts.insertRule(".pid { opacity: 0; }", sts.cssRules.length);
		flag = !flag;
		document.cookie='hidepid=' + flag + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	}
	else if (com == 'disable-slides')
	{
		document.cookie = 'noslides = ' + flag + '; expires=' + date.toGMTString() + '; path=/; domain=' + domain;
	}	
}


function ToggleNotifications(cb)
{
	
	var mode = 0;
	if (cb.checked) mode = 1;
	cb.disabled = true;
	ajaxpass('ToggleNotifications_XD', cb, 'req=accunsub&mode=' + mode);
}

function ToggleNotifications_XD(pass, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	pass.disabled = false;
}

function Subscribe(type, value)
{
	if (messanger.userid == 0) { alert('not logged in.'); return; }
	document.getElementById('subtitle').innerHTML = "(saving...)";
	ajax('Subscribe_XD', 'req=subscribe&cid=' + messanger.cid + '&type=' + type + "&value=" + value);
}

function Subscribe_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		document.getElementById('subtitle').innerHTML = "(error)";
		alert(output.substring(1));
	}
    else
    {
		document.getElementById('subtitle').innerHTML = "(saved)";
	};
}

function VideoSeek(id, time)
{
	if (id in vhs == false)
	{
		vhs[id] = new YT.Player(id, {
		    events: {
		      'onReady': function() { VideoSeek(id, time) },
		    }
		  });
		return;
	}
	var t = time.split(':');
	var tint = parseInt(t[t.length-1]);
	tint += parseInt(t[t.length-2]) * 60;
	if (t.length > 2) tint += parseInt(t[0]) * 3600;
	vhs[id].seekTo(tint);
}

function WallReport(idx)
{
	if (confirm("Are you sure you'd like to report this post to the moderator?"))
	ajax('WallReport_XD', 'req=wreport&wid=' + idx);
}

function WallReport_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		alert('Post successfully reported.');
	};
}

function WallPost()
{
	if (messanger['userid'] == 0)
	{
		alert("You need to be logged in to post on this wall.")
		return false;
	}
	if (messanger['editor'] != null)
	{
		alert("A comment box is already open on this page");
		messanger['editor'].scrollIntoView();
		return false;
	}
	messanger['seek'] = false;
	var thepost = document.createElement("div");
	thepost.className = 'wallitem';
	var temp = "<div style='position:relative; background:#468; padding:0px 70px 0px 120px'><div id=wallattach></div><b>" + messanger['nickname'] + "</b> &nbsp;<small>(user)</small> &nbsp;-&nbsp; ";
	if (messanger['originalRank'] == 0) temp += "<INPUT id=wrank type=checkbox onclick='WallRank(this)'>";
	else temp += "<INPUT id=wrank type=checkbox checked>";
	temp += " publish my current rank for this celeb. <span id=wallranklabel>";
	if (messanger['originalRank'] == 0) temp += '(unrated)';
	else temp += ranknames[messanger['originalRank']];
	temp += "</span></div><div style='padding:10px; background:white; color:black'><div style='float:left; border:1px solid #246; position:relative; top:-20px; margin:0px 10px -20px 0px'>";
	if (messanger['profile'] == 1) temp += "<IMG src='https://www.wikifeet.com/profiles/" + messanger['userid'] + ".jpg'>";
	else temp += "<IMG src='/images/noprof.jpg'>";
	temp += "</div><table style='border-collapse:collapse'><tr><td style='width:100%; padding-right:10px'><TEXTAREA id=commentbox onkeyup='WallCrawler(this.value)' style='width:100%; height:120px'></TEXTAREA></td><td id=attachment></td></tr></table><div style='text-align:right; margin-bottom:-8px'><button style='font-size:8pt; width:60px' onclick='WallCancel()'>cancel</button> &nbsp; <button id=wsubmit style='font-size:8pt; width:60px' onclick='WallSubmit(" + messanger['cid'] + "," + 0 + ")'>submit</button></div></div>";
	messanger['oldrep'] = '';
	thepost.innerHTML = temp;
	messanger['editor'] = document.getElementById('newpost');
	messanger['editor'].appendChild(thepost);
	WallAttach(-1);
	document.getElementById('commentbox').focus();
}

function WallAttach(type)
{
	if (type == -2) 
	{ 
		document.getElementById('wallattach').innerHTML = "<div onclick='WallAttach(0)'>Attach..</div>"; 
		document.getElementById('attachment').innerHTML = '';
		messanger['att_type'] = 0;
	}
	if (type == -1) 
	{ 
		document.getElementById('wallattach').innerHTML = "<div onclick='WallAttach(0)'>Attach..</div>"; 
	}
	else if (type == 0) { document.getElementById('wallattach').innerHTML = "<u>What would you like to attach?</u><div onclick='WallAttach(-2)'>- Nothing</div><div onclick='WallAttach(1)'>- a Picture</div><div onclick='WallAttach(2)'>- a YouTube video</div>"; }
	else if (type == 1) 
	{
		document.getElementById('wallattach').innerHTML = "Picture ID: <INPUT id=att_val style='width:60px' type=text><button onclick='WallAttach(11)'>submit</button><button onclick='WallAttach(-1)'>cancel</button>"; 
		document.getElementById('att_val').focus();
	}
	else if (type == 2) 
	{ 
		document.getElementById('wallattach').innerHTML = "Enter a YouTube video URL: <INPUT id=att_val style='width:200px' type=text><button onclick='WallAttach(12)'>submit</button><button onclick='WallAttach(-1)'>cancel</button>"; 
		document.getElementById('att_val').focus();
	}
	else if (type == 11)
	{
		var val = document.getElementById('att_val').value;
		if (val == '')
		{
			alert('You must enter a picture number');
			document.getElementById('att_val').focus();
		}
		else if (val.match(/^[0-9]{5,}$/) == null)
		{
			alert('Please supply a valid picture number, specifically from this gallery.');
			document.getElementById('att_val').focus();
		}
		else if (document.getElementById('link' + val) == null && messanger.pexist[val] == null)
		{
			alert("Can't find picture number " + val + ".\nA picture must be on this gallery in order for you to attach it.");
			document.getElementById('att_val').focus();
		}
		else
		{
			document.getElementById('wallattach').innerHTML = "Picture Attached. <a href='javascript:WallAttach(-2)'>remove</a>"; 
			document.getElementById('attachment').innerHTML = "<img src='https://thumbs.wikifeet.com/" + val + ".jpg' style='border:1px solid #246; height:120px'>";
			messanger['att_type'] = 1;
			messanger['att_val'] = val;
			document.getElementById('commentbox').focus();
		}
	}
	else if (type == 12)
	{
		var val = document.getElementById('att_val').value;
		if (val == '')
		{
			alert('You must enter a YouTube URL');
			document.getElementById('att_val').focus();
		}
		else
		{
			var temp = val.match(/youtube\.com\/watch\?v=([a-zA-Z0-9_-]+)/);
			if (temp == null) temp = val.match(/youtu.be\/([a-zA-Z0-9_-]+)/);
			if (temp == null)
			{
				alert('Please supply a valid YouTube URL.');
				document.getElementById('att_val').focus();
			}
			else
			{
				document.getElementById('wallattach').innerHTML = "Video Attached. <a href='javascript:WallAttach(-2)'>remove</a>"; 
				document.getElementById('attachment').innerHTML = "<img src='https://img.youtube.com/vi/" + temp[1] + "/0.jpg' style='border:1px solid #246; height:120px'>";
				messanger['att_type'] = 2;
				messanger['att_val'] = temp[1];
				document.getElementById('commentbox').focus();
			}

		}
	}
}

function WallCrawler(val)
{
	if (messanger['seek'] == true || messanger['att_type'] > 0) return;
	if (document.getElementById('wallattach') == null) return;
	else
	{
		var temp = val.match(/([0-9]{5,})[^0-9]/);
		if (temp != null && (document.getElementById('link' + temp[1]) != null || messanger.pexist[temp[1]] == 1))
		{
			messanger['seek'] = true;
			document.getElementById('wallattach').innerHTML = "Picture Attached. <a href='javascript:WallAttach(-2)'>remove</a>"; 
			document.getElementById('attachment').innerHTML = "<img src='https://thumbs.wikifeet.com/" + temp[1] + ".jpg' style='border:1px solid #246; height:120px'>";
			messanger['att_type'] = 1;
			messanger['att_val'] = temp[1];
		}
		else
		{
			temp = val.match(/youtube\.com\/watch\?v=([a-zA-Z0-9_-]+)[^a-zA-Z0-9_-]/);
			if (temp == null) temp = val.match(/youtu.be\/([a-zA-Z0-9_-]+)/);
			if (temp == null) return;
			messanger['seek'] = true;
			document.getElementById('wallattach').innerHTML = "Video Attached. <a href='javascript:WallAttach(-2)'>remove</a>"; 
			document.getElementById('attachment').innerHTML = "<img src='https://img.youtube.com/vi/" + temp[1] + "/0.jpg' style='border:1px solid #246; height:120px'>";
			messanger['att_type'] = 2;
			messanger['att_val'] = temp[1];
		}
	}
}

function pComment(pid)
{
	pExpand(pid);
	if (WallPost() == false) return;
	document.getElementById('wallattach').innerHTML = "Picture Attached. <a href='javascript:WallAttach(-2)'>remove</a>"; 
	document.getElementById('attachment').innerHTML = "<img src='https://thumbs.wikifeet.com/" + pid + ".jpg' style='border:1px solid #246; height:120px'>";
	messanger['att_type'] = 1;
	messanger['att_val'] = pid;
	document.getElementById('thewall').scrollIntoView();
	document.getElementById('commentbox').focus();
}

function Guidelines()
{
	var temp = '';
	temp += "It's cool of you to want to read the guidelines. So you're cool. Know that :)<br>";
	temp += "<h3>Site Guidelines:</h3><br><ul>";
	temp += "<li>Opening galleries for celebs who aren't listed on IMDb is not possible.</li>";
	temp += "<li>All uploaded pictures must show toes, soles or arches. If they don't, please report them as \"No feet\". Shoes and socks aren't really what wikiFeet is about.</li>";
	temp += "<li>When uploading close-up pictures of feet, it is best if the gallery has a full-body picture from the same event. That way we can make sure those feet belong to the right celeb.</li>";
	temp += "<li>wikiFeet has very strict rules regarding adult content. Edgy picture and suggestive poses could just as well be considered adult content. Cropping or censoring an adult picture doesn't make it ok. Uploading adult content to a gallery will likely get you banned, and the gallery locked. Do not unreport such pictures, or you will get banned.</li>";
	temp += "<li>Uploading pictures of celebs wherein they're younger than 17 is not allowed. Please report such pictures as \"Underage\". Do not unreport such pictures, or you will get banned.</li>";
	temp += "<li>When reporting a duplicate picture, make sure you report the lesser quality one and not the better copy. Please don't rely on resolution alone and check the actual pictures.</li>";
	temp += "<li>When considering a set of pictures from the same event (red carpet, photoshoot, movie stills, candids, etc.,) please limit *total* uploads in the gallery to EIGHT PER EVENT. Additional photos above eight are subject to removal as 'Duplicate' at the discretion of Users, Guild and/or Moderators down to a TOTAL OF EIGHT photos from each set in each gallery.</li>";
	temp += "<li>When deciding whether or not to report a picture as \"Poor Quality\", keep in mind that sometimes a poor quality picture is better than no picture at all. That goes especially for galleries with very few pictures, or rare finds.</li>";
	//temp += "<li>If you feel a picture has been wrongly reported - You can un-report it! Just hit the plus sign on a reported picture and you'll see the unreport button. Reported pictures will be automatically removed from the site unless someone unreports them.</li>";
	temp += "</ul>";
	document.getElementById('bluetop').innerHTML = temp;
}

function WallReply(idx)
{
	if (messanger['userid'] == 0)
	{
		alert("You need to be logged in to reply this post.")
		return;
	}
	if (messanger['editor'] != null)
	{
		alert("A comment box is already open on this page");
		messanger['editor'].scrollIntoView();
		return;
	}
	messanger['editor'] = document.getElementById('w_rep' + idx)
	if (messanger['editor'] == null)
	{
		messanger['oldrep'] = null;
		messanger['editor'] =  document.createElement("div");
		messanger['editor'].className = 'wallrep';
		messanger['editor'].id = 'w_rep' + idx;
		messanger['editor'].innerHTML = "<IMG src='/images/replies.gif' style='position:absolute; top:0px; right:-48px'>";
		var lastelement = document.getElementById('w_post' + idx).nextSibling;
		if (lastelement == null) document.getElementById('thewall').appendChild(messanger['editor']);
		else lastelement.parentNode.insertBefore(messanger['editor'], lastelement);
	}
	else messanger['oldrep'] = messanger['editor'].innerHTML;
	
	var therep = document.createElement("div");
	therep.className = 'wallrepitem';
	var temp = "<div style='background:#8ac; padding:0px 10px 0px 65px'><b>" + messanger['nickname'] + "</b> &nbsp;<small>(user)</small> &nbsp;-&nbsp; ";
	if (messanger['originalRank'] == 0) temp += "<INPUT id=wrank type=checkbox onclick='WallRank(this)'>";
	else temp += "<INPUT id=wrank type=checkbox checked>";
	temp += " publish my current rank for this celeb. <span id=wallranklabel>";
	if (messanger['originalRank'] == 0) temp += '(unranked)';
	else temp += ranknames[messanger['originalRank']];
	temp += "</span></div><div style='padding:5px; background:white; color:black'><DIV style='float:left; border:1px solid #246; background:#666; position:relative; top:-15px; margin:0px 10px -15px 0px; height:50px; width:50px; text-align:center; overflow:hidden'>";
	if (messanger['profile'] == 1) temp += "<IMG src='https://www.wikifeet.com/profiles/" + messanger['userid'] + ".jpg' style='height:50px'>";
	else temp += "<IMG src='/images/noprof.jpg' style='height:50px'>";
	temp += "</DIV><div style='margin:0px 5px 0px 65px'><TEXTAREA id=commentbox style='width:100%'></TEXTAREA></div><div style='text-align:right; margin-bottom:-15px'><button style='font-size:8pt; width:60px' onclick='WallCancel()'>cancel</button> &nbsp; <button id=wsubmit style='font-size:8pt; width:60px' onclick='WallSubmit(" + messanger['cid'] + "," + idx + ")'>submit</button></div></div></div>";
	therep.innerHTML = temp;
	messanger['editor'].appendChild(therep);
	document.getElementById('commentbox').focus();
}

function WallRank(obj)
{
	if (messanger['originalRank'] > 0) return;
	alert("You haven't rated this celebrity yet.");
	obj.checked = false;
}

function WallCancel()
{	
	if (messanger['oldrep'] == null) messanger['editor'].parentNode.removeChild(messanger['editor']);
	else messanger['editor'].innerHTML = messanger['oldrep'];
	messanger['editor'] = null;
}

function WallSubmit(cid, idx)
{
	if (document.getElementById('commentbox') == null) { alert('Critical error. cannot submit post.'); return; }
	if (document.getElementById('commentbox').value == '') { alert('You cannot submit an empty comment'); document.getElementById('commentbox').focus(); return; }
	var publishedrank = messanger['originalRank'];
	if (document.getElementById('wrank').checked == false) publishedrank = 0;
	document.getElementById('wsubmit').disabled = true;
	WallCrawler(document.getElementById('commentbox').value);
	ajax('WallSubmit_XD', 'req=wsubmit&cid=' + cid + '&wid=' + idx + '&comment=' + encodeURIComponent(document.getElementById('commentbox').value) + '&rank=' + publishedrank + '&attype=' + messanger['att_type'] + '&atval=' + encodeURIComponent(messanger['att_val']));
}

function WallSubmit_XD(output)
{
	document.getElementById('wsubmit').disabled = false;
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
    else
    {
		document.getElementById('thewall').innerHTML = output.substring(1);
		document.getElementById('thewall').scrollIntoView();
		messanger['editor'] = null;
		messanger['att_type'] = 0;
	};
}

function WallRetract(button, idx)
{
	if (!confirm('Are you sure you wish to delete this comment?')) return;
	button.onclick = null;
	ajax('WallRetract_XD', 'req=wretract&idx=' + idx);
}

function WallRetract_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else if (output.substring(0,1)=='A')
	{
		document.getElementById('w_post' + output.substring(1)).style.opacity = 0.3;
	}
	else
	{
		document.getElementById('thewall').innerHTML = output.substring(1);
		document.getElementById('thewall').scrollIntoView();
		messanger['editor'] = null;
	};
}

function Lionize(div, uid, val)
{
	ajaxpass('Lionize_XD', {div:div, uid:uid}, 'req=popuclick&type=lionize&pid=' + uid + '&value=' + val);
}

function Lionize_XD(pass, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		pass.div.className = 'lion' + output.substring(1);
		if (output.substring(1) == '1') pass.div.innerHTML = '&#9819; Lionized';
		else pass.div.innerHTML = 'Lionize user';
		pass.div.onclick = function() { Lionize(this, pass.uid, output.substring(1)); };
	}
}


function Blacklist(uid)
{
	if (!confirm('Clicking OK will hide everything written by this user.\nAre you sure you want to do that?')) return;
	ajax('Blacklist_XD', 'req=blacklist&uid=' + uid);
}

function Blacklist_XD(output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		window.location.reload(1);
	}
}

function WallApprove(button, idx, state, tidx)
{
	if (tidx == null) tidx = idx;
	if (state == 2) if (!confirm('Clicking OK will hide all comments written by this user.\nAre you sure you want to do that?')) return;
	button.onclick = null;
	ajaxpass('WallApprove_XD', tidx, 'req=wapprove&idx=' + idx + '&state=' + state);
}

function WallApprove_XD(pass, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else if (output.substring(0,1)=='R')
	{
		document.getElementById('thewall').innerHTML = output.substring(1);
		document.getElementById('thewall').scrollIntoView();
		messanger['editor'] = null;
	}
	else
	{
		if (output.substring(1) == '') { document.getElementById('w_post' + pass).parentNode.removeChild(document.getElementById('w_post' + pass)); }
		else
		{
			var div = document.createElement('div');
			div.innerHTML = output.substring(1);
			document.getElementById('w_post' + pass).parentNode.replaceChild(div.firstChild, document.getElementById('w_post' + pass));
			div = null;
		}
	}
}

function CreateUploadForm(cid)
{
	messanger['upqueue'] = new Array();
	messanger['upfinished'] = new Array();
	messanger['cid'] = cid;
	messanger['stop'] = false;
	ShowUploadPanel(0);
	
	if (window.FileList) 
	{
		messanger['html5'] = true;
		document.getElementById('firstinput').setAttribute('multiple', 'multiple');
		messanger['imageloader'] = new FileReader();
		messanger['imageloader'].onload = function(image)
		{
			if (document.getElementById('imageloaded') == null) return;
			var theimage = new Image();
			theimage.height = 100;
			theimage.src = image.target.result;			
			document.getElementById('imageloaded').innerHTML = '';
			document.getElementById('imageloaded').appendChild(theimage);
		}
	} 
	else
	{
		var req = document.createElement('input');
		req.setAttribute('type', 'hidden');
		req.setAttribute('name', 'req');
		req.setAttribute('value', 'upload');
		var cid_in = document.createElement('input');
		cid_in.setAttribute('type', 'hidden');
		cid_in.setAttribute('name', 'cid');
		cid_in.setAttribute('value', messanger['cid']);
		messanger['theform'] = document.getElementById('upform');
		messanger['theform'].action = '/perl/upload.fpl';
		messanger['theform'].appendChild(req);	
		messanger['theform'].appendChild(cid_in);
		document.getElementById('nohtml5').innerHTML = "<div style='margin:20px 10% 10px 10%; font-size:9pt; border:1px solid white; background:#833; color:white; padding:10px'>You can currently add only 1 file at a time to the upload queue.<br>HTML5 is required to choose multiple files. Please update your browser.</div>";
	}	
}

function UploadClear()
{
	if (!confirm('Are you sure you want to clear the upload queue?')) return;
	document.getElementById('upclear').disabled = true;
	messanger['upqueue'] = new Array();
	document.getElementById('upqueue').innerHTML = '';
	document.getElementById('upnfo').innerHTML = '';
	messanger['confirmexit'] = null;
}

function ShowUploadPanel(type)
{
	if (type == 0) document.getElementById('upcp').innerHTML = "<div id=uploadbtn onclick='StartUpload()'></div><div style='display:inline-block; margin-bottom:10px'>Click to start uploading</div>";
	else document.getElementById('upcp').innerHTML = "<a href='javascript:StopUpload()'><div id=stopbtn><img src='/images/stop1.gif'></div></a><div style='height:67px; text-align:left; padding-left:20px'>Uploading " + messanger['upcurrent'].name + "<br><span id=progress></span></div>";
}

function UF_AddFile(lastinput)
{
	if (messanger['html5'])
	{
		var exist = 0; // reset exist
		for (var file=0; file<lastinput.files.length; file++) // for every file in <INPUT>
		{
			var skipthis = false; // reset skipthis
			for (var item in messanger['upqueue']) // for every item in queue
			{
				if (messanger['upqueue'][item].name == lastinput.files.item(file).name) skipthis = true;
			}
			if (skipthis) exist++;
			else // ok to add to queue
			{
				var lcd = document.createElement('div');
				lcd.className = 'upitem';
				lcd.innerHTML = lastinput.files.item(file).name;
				document.getElementById('upqueue').appendChild(lcd);
				
				var obj = new Object();
				obj.ref = lastinput.files.item(file);
				obj.name = lastinput.files.item(file).name;
				obj.status = -1;
				obj.div = lcd;
				//messanger['allobjs'].push(obj);
				//lcd.setAttribute('obj', messanger['allobjs'].length-1);
				//lcd.onmouseover = function() { UF_Data(messanger['allobjs'][this.getAttribute('obj')]); }
				lcd.onmouseover = function(passobj) { return function() { UF_Data(passobj); }}(obj);
				
				messanger['upqueue'].push(obj);
				document.getElementById('upclear').disabled = false;
			}
		}
		if (lastinput.files.length == 1 && exist == 1) alert('the file was not added because it was already in the upload queue');
		else if (exist == 1) alert('1 file was not added because it was already in the upload queue');
		else if (exist > 1) alert(exist + ' files were not added because they were already in the upload queue');
		lastinput.value = '';
	}
	else
	{
		var skipthis = false;
		for (var item in messanger['upqueue'])
		{
			if (lastinput.value == messanger['upqueue'][item].ref.value) skipthis = true;
		}
		if (skipthis)
		{
			lastinput.value = '';
			alert('the file was not added because it was already in the upload queue');
		}
		else
		{
			var lcd = document.createElement('div');
			lcd.className = 'upitem';
			lcd.innerHTML = lastinput.value.substring(lastinput.value.lastIndexOf('\\')+1);			
			document.getElementById('upqueue').appendChild(lcd);
			
			var obj = new Object();
			obj.ref = lastinput;
			obj.name = lastinput.value.substring(lastinput.value.lastIndexOf('\\')+1);
			obj.status = -1;
			obj.div = lcd;
			//messanger['allobjs'].push(obj);
			//lcd.setAttribute('obj', messanger['allobjs'].length-1);
			//lcd.onmouseover = function() { UF_Data(messanger['allobjs'][this.getAttribute('obj')]); }
			lcd.onmouseover = function(passobj) { return function() { UF_Data(passobj); }}(obj);
					
			messanger['upqueue'].push(obj);
			document.getElementById('upclear').disabled = false;
			
			document.getElementById('inputholder').removeChild(lastinput);
			var temp = document.createElement('input');
			temp.setAttribute('type', 'file');
			temp.setAttribute('name', 'file');
			temp.setAttribute('accept', 'image/*');
			temp.setAttribute('onchange', 'UF_AddFile(this)');
			document.getElementById('inputholder').appendChild(temp);
		}
	}
	if (messanger['upqueue'].length > 0) messanger['confirmexit'] = 'You still have files in your upload queue.';
}

function UF_Data(obj)
{
	var out = document.getElementById('upnfo');
	var thetext;
	if (messanger['html5'])
	{		
		thetext =  obj.name + "<br><div id=imageloaded></div>Status: <b>";
	}
	else
	{
		thetext =  obj.name + "<br><br>Status: <b>";
	}	
	if (obj.status == -1) thetext += "To be uploaded.";
	else if (obj.status == 1) thetext += "Uploaded Successfully!";
	else if (obj.status == 0 || obj.status == 'S') thetext += "Error: " + obj.info;
	thetext += "</b>";
	out.innerHTML = thetext;
	
	if (messanger['html5']) // adding thumb button
	{
		var button = document.createElement("input");
		button.type = "button";
		button.value = "Load thumbnail";
		button.onclick = function(passref) { return function() { 
			this.disabled = true;
			this.value = 'Loading...';
			messanger['imageloader'].readAsDataURL(passref); 
			}}(obj.ref);
		document.getElementById('imageloaded').appendChild(button);
	}
}

function UnBlock(span, idx)
{
	span.onclick = null;
	ajaxpass('UnBlock_XD', idx, 'req=unblock&idx=' + idx);
}

function UnBlock_XD(pass, output)
{
	if (output.substring(0,1)=='0')
	{
		alert(output.substring(1));
	}
	else
	{
		var tr = document.getElementById('blocked' + pass);
		if (tr == null) return;
		tr.parentNode.removeChild(tr);
	}
}

function StartUpload()
{
	if (messanger['upqueue'].length == 0) alert('There are no files to be uploaded,\nPlease add files to the upload queue.');
	else
	{
		document.getElementById('upclear').disabled = true;
		messanger['upcurrent'] = messanger['upqueue'].shift();
		ShowUploadPanel(1);
		messanger['upcurrent'].div.style.backgroundColor = '#ccf';
		if (messanger['html5'])
		{
			var xhr = new XMLHttpRequest();
			var formdata = new FormData();
			xhr.open("POST", "/perl/upload.fpl?" + Math.random(), true);			
			formdata.append('req', 'upload');
			formdata.append('cid', messanger['cid']);
			formdata.append('file', messanger['upcurrent'].ref);
			
			xhr.onloadend = function () { UploadComplete(this.responseText); }
			xhr.upload.onprogress = function (pe) { if (pe.lengthComputable && pe.total > 0 && messanger['stop'] == false && document.getElementById('progress') != null) document.getElementById('progress').innerHTML = 'Progress: ' + Math.round(pe.loaded*100/pe.total) + '%'; }
			
			xhr.send(formdata); 
		}
		else
		{		
			messanger['theform'].appendChild(messanger['upcurrent'].ref);
			messanger['theform'].submit();
		}
	}
}


function StopUpload()
{
	if (document.getElementById('progress') != null) document.getElementById('progress').innerHTML = 'STOPPING...';
	messanger['stop'] = true;
}

function UploadComplete(output)
{
	if (messanger['upcurrent'] == null) return;
	if (messanger['html5'] != true) 
	{
		messanger['theform'].removeChild(messanger['upcurrent'].ref);	// removes current file from form
		output = document.getElementById('thehiddenone').contentWindow.document.body.innerHTML; // unifying output var
	}
	messanger['upcurrent'].status = output.substring(0,1);
	messanger['upcurrent'].info = output.substring(1);
	if (messanger['upcurrent'].info == '') messanger['upcurrent'].info = 'Unknown error.';
	if (messanger['upcurrent'].status=='1')
	{
		messanger['upcurrent'].div.style.backgroundColor = '#cfc';
		messanger['upcurrent'].div.innerHTML = "Uploaded: " + messanger['upcurrent'].name;
	}
	else
	{
		messanger['upcurrent'].div.style.backgroundColor = '#fcc';
		messanger['upcurrent'].div.innerHTML = "Error: " + messanger['upcurrent'].name;
	}
	if (messanger['upcurrent'].status == 'S')
	{
		alert(messanger['upcurrent'].info);
		messanger['stop'] = true;
	}
	UF_Data(messanger['upcurrent']);
	messanger['upfinished'].push(messanger['upcurrent']);		// puts it in the finished array	
	if (messanger['upqueue'].length > 0 && messanger['stop'] == false) StartUpload();
	else
	{
		document.getElementById('upclear').disabled = false;
		ShowUploadPanel(0);
		messanger['stop'] = false;
		messanger['confirmexit'] = null;
	}
}


